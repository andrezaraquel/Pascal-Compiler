/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>for statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.for_statement#getVariable_identifier <em>Variable identifier</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.for_statement#getInitial_expression <em>Initial expression</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.for_statement#getFinal_expression <em>Final expression</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.for_statement#getStatement <em>Statement</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.pascal.pascal.PascalPackage#getfor_statement()
 * @model
 * @generated
 */
public interface for_statement extends EObject
{
  /**
   * Returns the value of the '<em><b>Variable identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable identifier</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable identifier</em>' containment reference.
   * @see #setVariable_identifier(identifier)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getfor_statement_Variable_identifier()
   * @model containment="true"
   * @generated
   */
  identifier getVariable_identifier();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.for_statement#getVariable_identifier <em>Variable identifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable identifier</em>' containment reference.
   * @see #getVariable_identifier()
   * @generated
   */
  void setVariable_identifier(identifier value);

  /**
   * Returns the value of the '<em><b>Initial expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Initial expression</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Initial expression</em>' containment reference.
   * @see #setInitial_expression(initial_expression)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getfor_statement_Initial_expression()
   * @model containment="true"
   * @generated
   */
  initial_expression getInitial_expression();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.for_statement#getInitial_expression <em>Initial expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Initial expression</em>' containment reference.
   * @see #getInitial_expression()
   * @generated
   */
  void setInitial_expression(initial_expression value);

  /**
   * Returns the value of the '<em><b>Final expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Final expression</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Final expression</em>' containment reference.
   * @see #setFinal_expression(final_expression)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getfor_statement_Final_expression()
   * @model containment="true"
   * @generated
   */
  final_expression getFinal_expression();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.for_statement#getFinal_expression <em>Final expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Final expression</em>' containment reference.
   * @see #getFinal_expression()
   * @generated
   */
  void setFinal_expression(final_expression value);

  /**
   * Returns the value of the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Statement</em>' containment reference.
   * @see #setStatement(statement)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getfor_statement_Statement()
   * @model containment="true"
   * @generated
   */
  statement getStatement();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.for_statement#getStatement <em>Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Statement</em>' containment reference.
   * @see #getStatement()
   * @generated
   */
  void setStatement(statement value);

} // for_statement
