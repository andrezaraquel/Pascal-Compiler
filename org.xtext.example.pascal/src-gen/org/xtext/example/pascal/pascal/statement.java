/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.statement#getLabel <em>Label</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.statement#getSimple_statement <em>Simple statement</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.statement#getStructured_statement <em>Structured statement</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.pascal.pascal.PascalPackage#getstatement()
 * @model
 * @generated
 */
public interface statement extends EObject
{
  /**
   * Returns the value of the '<em><b>Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Label</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Label</em>' containment reference.
   * @see #setLabel(label)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getstatement_Label()
   * @model containment="true"
   * @generated
   */
  label getLabel();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.statement#getLabel <em>Label</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Label</em>' containment reference.
   * @see #getLabel()
   * @generated
   */
  void setLabel(label value);

  /**
   * Returns the value of the '<em><b>Simple statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Simple statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Simple statement</em>' containment reference.
   * @see #setSimple_statement(simple_statement)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getstatement_Simple_statement()
   * @model containment="true"
   * @generated
   */
  simple_statement getSimple_statement();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.statement#getSimple_statement <em>Simple statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Simple statement</em>' containment reference.
   * @see #getSimple_statement()
   * @generated
   */
  void setSimple_statement(simple_statement value);

  /**
   * Returns the value of the '<em><b>Structured statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Structured statement</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Structured statement</em>' containment reference.
   * @see #setStructured_statement(structured_statement)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getstatement_Structured_statement()
   * @model containment="true"
   * @generated
   */
  structured_statement getStructured_statement();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.statement#getStructured_statement <em>Structured statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Structured statement</em>' containment reference.
   * @see #getStructured_statement()
   * @generated
   */
  void setStructured_statement(structured_statement value);

} // statement
