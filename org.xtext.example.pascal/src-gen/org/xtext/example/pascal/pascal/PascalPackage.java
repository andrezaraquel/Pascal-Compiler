/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.pascal.pascal.PascalFactory
 * @model kind="package"
 * @generated
 */
public interface PascalPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "pascal";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/pascal/Pascal";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "pascal";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PascalPackage eINSTANCE = org.xtext.example.pascal.pascal.impl.PascalPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.BeginImpl <em>Begin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.BeginImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getBegin()
   * @generated
   */
  int BEGIN = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Begin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.programImpl <em>program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.programImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram()
   * @generated
   */
  int PROGRAM = 1;

  /**
   * The feature id for the '<em><b>Program heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__PROGRAM_HEADING = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__BLOCK = 1;

  /**
   * The number of structural features of the '<em>program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.program_headingImpl <em>program heading</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.program_headingImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram_heading()
   * @generated
   */
  int PROGRAM_HEADING = 2;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Identifier list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING__IDENTIFIER_LIST = 1;

  /**
   * The number of structural features of the '<em>program heading</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.identifier_listImpl <em>identifier list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.identifier_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getidentifier_list()
   * @generated
   */
  int IDENTIFIER_LIST = 3;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>identifier list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_blockImpl <em>procedure block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_blockImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_block()
   * @generated
   */
  int PROCEDURE_BLOCK = 4;

  /**
   * The feature id for the '<em><b>Declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_BLOCK__DECLARATION_PART = 0;

  /**
   * The feature id for the '<em><b>Statement part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_BLOCK__STATEMENT_PART = 1;

  /**
   * The number of structural features of the '<em>procedure block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_BLOCK_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_blockImpl <em>function block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_blockImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_block()
   * @generated
   */
  int FUNCTION_BLOCK = 5;

  /**
   * The feature id for the '<em><b>Declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_BLOCK__DECLARATION_PART = 0;

  /**
   * The feature id for the '<em><b>Statement part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_BLOCK__STATEMENT_PART = 1;

  /**
   * The number of structural features of the '<em>function block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_BLOCK_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.blockImpl <em>block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.blockImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getblock()
   * @generated
   */
  int BLOCK = 6;

  /**
   * The feature id for the '<em><b>Declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__DECLARATION_PART = 0;

  /**
   * The feature id for the '<em><b>Statement part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__STATEMENT_PART = 1;

  /**
   * The number of structural features of the '<em>block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.statement_partImpl <em>statement part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.statement_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_part()
   * @generated
   */
  int STATEMENT_PART = 7;

  /**
   * The feature id for the '<em><b>Statement sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_PART__STATEMENT_SEQUENCE = 0;

  /**
   * The number of structural features of the '<em>statement part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.statement_sequenceImpl <em>statement sequence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.statement_sequenceImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_sequence()
   * @generated
   */
  int STATEMENT_SEQUENCE = 8;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_SEQUENCE__STATEMENT = 0;

  /**
   * The number of structural features of the '<em>statement sequence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_SEQUENCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.statementImpl <em>statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement()
   * @generated
   */
  int STATEMENT = 9;

  /**
   * The feature id for the '<em><b>Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__LABEL = 0;

  /**
   * The feature id for the '<em><b>Simple statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__SIMPLE_STATEMENT = 1;

  /**
   * The feature id for the '<em><b>Structured statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__STRUCTURED_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.simple_statementImpl <em>simple statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.simple_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_statement()
   * @generated
   */
  int SIMPLE_STATEMENT = 10;

  /**
   * The feature id for the '<em><b>Assignment statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__ASSIGNMENT_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Procedure statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__PROCEDURE_STATEMENT = 1;

  /**
   * The feature id for the '<em><b>Goto statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__GOTO_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>simple statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.goto_statementImpl <em>goto statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.goto_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getgoto_statement()
   * @generated
   */
  int GOTO_STATEMENT = 11;

  /**
   * The feature id for the '<em><b>Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOTO_STATEMENT__LABEL = 0;

  /**
   * The number of structural features of the '<em>goto statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOTO_STATEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_statementImpl <em>procedure statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_statement()
   * @generated
   */
  int PROCEDURE_STATEMENT = 12;

  /**
   * The feature id for the '<em><b>Procedure identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_STATEMENT__PROCEDURE_IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Actual parameter list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_STATEMENT__ACTUAL_PARAMETER_LIST = 1;

  /**
   * The number of structural features of the '<em>procedure statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.actual_parameter_listImpl <em>actual parameter list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.actual_parameter_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_parameter_list()
   * @generated
   */
  int ACTUAL_PARAMETER_LIST = 13;

  /**
   * The feature id for the '<em><b>Actual parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER = 0;

  /**
   * The number of structural features of the '<em>actual parameter list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.actual_parameterImpl <em>actual parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.actual_parameterImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_parameter()
   * @generated
   */
  int ACTUAL_PARAMETER = 14;

  /**
   * The feature id for the '<em><b>Actual value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER__ACTUAL_VALUE = 0;

  /**
   * The feature id for the '<em><b>Actual variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER__ACTUAL_VARIABLE = 1;

  /**
   * The feature id for the '<em><b>Actual procedure</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER__ACTUAL_PROCEDURE = 2;

  /**
   * The feature id for the '<em><b>Actual function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER__ACTUAL_FUNCTION = 3;

  /**
   * The number of structural features of the '<em>actual parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.actual_functionImpl <em>actual function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.actual_functionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_function()
   * @generated
   */
  int ACTUAL_FUNCTION = 15;

  /**
   * The feature id for the '<em><b>Function identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_FUNCTION__FUNCTION_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>actual function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_FUNCTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.actual_procedureImpl <em>actual procedure</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.actual_procedureImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_procedure()
   * @generated
   */
  int ACTUAL_PROCEDURE = 16;

  /**
   * The feature id for the '<em><b>Procedure identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PROCEDURE__PROCEDURE_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>actual procedure</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PROCEDURE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.actual_variableImpl <em>actual variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.actual_variableImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_variable()
   * @generated
   */
  int ACTUAL_VARIABLE = 17;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_VARIABLE__VARIABLE = 0;

  /**
   * The number of structural features of the '<em>actual variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_VARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.actual_valueImpl <em>actual value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.actual_valueImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_value()
   * @generated
   */
  int ACTUAL_VALUE = 18;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_VALUE__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>actual value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_VALUE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.identifierImpl <em>identifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.identifierImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getidentifier()
   * @generated
   */
  int IDENTIFIER = 19;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>identifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.assignment_statementImpl <em>assignment statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.assignment_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getassignment_statement()
   * @generated
   */
  int ASSIGNMENT_STATEMENT = 20;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Function identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__FUNCTION_IDENTIFIER = 1;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__EXPRESSION = 2;

  /**
   * The number of structural features of the '<em>assignment statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.output_listImpl <em>output list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.output_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getoutput_list()
   * @generated
   */
  int OUTPUT_LIST = 108;

  /**
   * The number of structural features of the '<em>output list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_LIST_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.output_valueImpl <em>output value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.output_valueImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getoutput_value()
   * @generated
   */
  int OUTPUT_VALUE = 109;

  /**
   * The feature id for the '<em><b>Output value</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_VALUE__OUTPUT_VALUE = OUTPUT_LIST_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>output value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTPUT_VALUE_FEATURE_COUNT = OUTPUT_LIST_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.expressionImpl <em>expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.expressionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression()
   * @generated
   */
  int EXPRESSION = 21;

  /**
   * The feature id for the '<em><b>Output value</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OUTPUT_VALUE = OUTPUT_VALUE__OUTPUT_VALUE;

  /**
   * The feature id for the '<em><b>Simple expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SIMPLE_EXPRESSION = OUTPUT_VALUE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Relational operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RELATIONAL_OPERATOR = OUTPUT_VALUE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPRESSION = OUTPUT_VALUE_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = OUTPUT_VALUE_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.simple_expressionImpl <em>simple expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.simple_expressionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_expression()
   * @generated
   */
  int SIMPLE_EXPRESSION = 22;

  /**
   * The feature id for the '<em><b>Sign</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__SIGN = 0;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__TERM = 1;

  /**
   * The feature id for the '<em><b>Addition operator</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__ADDITION_OPERATOR = 2;

  /**
   * The number of structural features of the '<em>simple expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.termImpl <em>term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.termImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getterm()
   * @generated
   */
  int TERM = 23;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__FACTOR = 0;

  /**
   * The feature id for the '<em><b>Multiplication operator</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__MULTIPLICATION_OPERATOR = 1;

  /**
   * The number of structural features of the '<em>term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.factorImpl <em>factor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.factorImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfactor()
   * @generated
   */
  int FACTOR = 24;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__NUMBER = 1;

  /**
   * The feature id for the '<em><b>Strings</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__STRINGS = 2;

  /**
   * The feature id for the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__SET = 3;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__IDENTIFIER = 4;

  /**
   * The feature id for the '<em><b>Function designator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__FUNCTION_DESIGNATOR = 5;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__EXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__FACTOR = 7;

  /**
   * The number of structural features of the '<em>factor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_designatorImpl <em>function designator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_designatorImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_designator()
   * @generated
   */
  int FUNCTION_DESIGNATOR = 25;

  /**
   * The feature id for the '<em><b>Function identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR__FUNCTION_IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Actual parameter list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR__ACTUAL_PARAMETER_LIST = 1;

  /**
   * The number of structural features of the '<em>function designator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.setImpl <em>set</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.setImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset()
   * @generated
   */
  int SET = 26;

  /**
   * The feature id for the '<em><b>Element list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__ELEMENT_LIST = 0;

  /**
   * The number of structural features of the '<em>set</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.element_listImpl <em>element list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.element_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getelement_list()
   * @generated
   */
  int ELEMENT_LIST = 27;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_LIST__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>element list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.stringsImpl <em>strings</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.stringsImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstrings()
   * @generated
   */
  int STRINGS = 28;

  /**
   * The feature id for the '<em><b>String character</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGS__STRING_CHARACTER = 0;

  /**
   * The number of structural features of the '<em>strings</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.string_characterImpl <em>string character</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.string_characterImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstring_character()
   * @generated
   */
  int STRING_CHARACTER = 29;

  /**
   * The feature id for the '<em><b>Any character except quote</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE = 0;

  /**
   * The number of structural features of the '<em>string character</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_CHARACTER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.any_character_except_quoteImpl <em>any character except quote</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.any_character_except_quoteImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getany_character_except_quote()
   * @generated
   */
  int ANY_CHARACTER_EXCEPT_QUOTE = 30;

  /**
   * The feature id for the '<em><b>Procedure heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY_CHARACTER_EXCEPT_QUOTE__PROCEDURE_HEADING = 0;

  /**
   * The number of structural features of the '<em>any character except quote</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY_CHARACTER_EXCEPT_QUOTE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.numberImpl <em>number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.numberImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getnumber()
   * @generated
   */
  int NUMBER = 31;

  /**
   * The feature id for the '<em><b>Integer number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__INTEGER_NUMBER = 0;

  /**
   * The feature id for the '<em><b>Real number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__REAL_NUMBER = 1;

  /**
   * The number of structural features of the '<em>number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.real_numberImpl <em>real number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.real_numberImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getreal_number()
   * @generated
   */
  int REAL_NUMBER = 32;

  /**
   * The feature id for the '<em><b>Digit sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_NUMBER__DIGIT_SEQUENCE = 0;

  /**
   * The feature id for the '<em><b>Digit sequence2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_NUMBER__DIGIT_SEQUENCE2 = 1;

  /**
   * The feature id for the '<em><b>Scale factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_NUMBER__SCALE_FACTOR = 2;

  /**
   * The number of structural features of the '<em>real number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_NUMBER_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.scale_factorImpl <em>scale factor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.scale_factorImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getscale_factor()
   * @generated
   */
  int SCALE_FACTOR = 33;

  /**
   * The feature id for the '<em><b>Sign</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALE_FACTOR__SIGN = 0;

  /**
   * The feature id for the '<em><b>Digit sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALE_FACTOR__DIGIT_SEQUENCE = 1;

  /**
   * The number of structural features of the '<em>scale factor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALE_FACTOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variableImpl <em>variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variableImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable()
   * @generated
   */
  int VARIABLE = 34;

  /**
   * The feature id for the '<em><b>Entire variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__ENTIRE_VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Expression list</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__EXPRESSION_LIST = 1;

  /**
   * The feature id for the '<em><b>Field identifier</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__FIELD_IDENTIFIER = 2;

  /**
   * The number of structural features of the '<em>variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.entire_variableImpl <em>entire variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.entire_variableImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getentire_variable()
   * @generated
   */
  int ENTIRE_VARIABLE = 35;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTIRE_VARIABLE__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>entire variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTIRE_VARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.expression_listImpl <em>expression list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.expression_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression_list()
   * @generated
   */
  int EXPRESSION_LIST = 36;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>expression list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.labelImpl <em>label</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.labelImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel()
   * @generated
   */
  int LABEL = 37;

  /**
   * The feature id for the '<em><b>Integer number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL__INTEGER_NUMBER = 0;

  /**
   * The number of structural features of the '<em>label</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.integer_numberImpl <em>integer number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.integer_numberImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getinteger_number()
   * @generated
   */
  int INTEGER_NUMBER = 38;

  /**
   * The feature id for the '<em><b>Digit sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_NUMBER__DIGIT_SEQUENCE = 0;

  /**
   * The number of structural features of the '<em>integer number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_NUMBER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.digit_sequenceImpl <em>digit sequence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.digit_sequenceImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getdigit_sequence()
   * @generated
   */
  int DIGIT_SEQUENCE = 39;

  /**
   * The feature id for the '<em><b>Sign</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIGIT_SEQUENCE__SIGN = 0;

  /**
   * The feature id for the '<em><b>Unsigned digit sequence</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIGIT_SEQUENCE__UNSIGNED_DIGIT_SEQUENCE = 1;

  /**
   * The number of structural features of the '<em>digit sequence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIGIT_SEQUENCE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.structured_statementImpl <em>structured statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.structured_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstructured_statement()
   * @generated
   */
  int STRUCTURED_STATEMENT = 40;

  /**
   * The feature id for the '<em><b>Compound statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__COMPOUND_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Repetitive statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__REPETITIVE_STATEMENT = 1;

  /**
   * The feature id for the '<em><b>Conditional statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__CONDITIONAL_STATEMENT = 2;

  /**
   * The feature id for the '<em><b>With statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__WITH_STATEMENT = 3;

  /**
   * The number of structural features of the '<em>structured statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.with_statementImpl <em>with statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.with_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getwith_statement()
   * @generated
   */
  int WITH_STATEMENT = 41;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_STATEMENT__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_STATEMENT__STATEMENT = 1;

  /**
   * The number of structural features of the '<em>with statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.conditional_statementImpl <em>conditional statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.conditional_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconditional_statement()
   * @generated
   */
  int CONDITIONAL_STATEMENT = 42;

  /**
   * The feature id for the '<em><b>If statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_STATEMENT__IF_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Case statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_STATEMENT__CASE_STATEMENT = 1;

  /**
   * The number of structural features of the '<em>conditional statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONAL_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.case_statementImpl <em>case statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.case_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcase_statement()
   * @generated
   */
  int CASE_STATEMENT = 43;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Case limb</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT__CASE_LIMB = 1;

  /**
   * The number of structural features of the '<em>case statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.case_limbImpl <em>case limb</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.case_limbImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcase_limb()
   * @generated
   */
  int CASE_LIMB = 44;

  /**
   * The feature id for the '<em><b>Case label list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LIMB__CASE_LABEL_LIST = 0;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LIMB__STATEMENT = 1;

  /**
   * The number of structural features of the '<em>case limb</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LIMB_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.case_label_listImpl <em>case label list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.case_label_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcase_label_list()
   * @generated
   */
  int CASE_LABEL_LIST = 45;

  /**
   * The feature id for the '<em><b>Constant</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LABEL_LIST__CONSTANT = 0;

  /**
   * The number of structural features of the '<em>case label list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LABEL_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.if_statementImpl <em>if statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.if_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getif_statement()
   * @generated
   */
  int IF_STATEMENT = 46;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__STATEMENT = 1;

  /**
   * The number of structural features of the '<em>if statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.repetitive_statementImpl <em>repetitive statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.repetitive_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrepetitive_statement()
   * @generated
   */
  int REPETITIVE_STATEMENT = 47;

  /**
   * The feature id for the '<em><b>While statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPETITIVE_STATEMENT__WHILE_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Repeat statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPETITIVE_STATEMENT__REPEAT_STATEMENT = 1;

  /**
   * The feature id for the '<em><b>For statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPETITIVE_STATEMENT__FOR_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>repetitive statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPETITIVE_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.for_statementImpl <em>for statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.for_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfor_statement()
   * @generated
   */
  int FOR_STATEMENT = 48;

  /**
   * The feature id for the '<em><b>Variable identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__VARIABLE_IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Initial expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__INITIAL_EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Final expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__FINAL_EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__STATEMENT = 3;

  /**
   * The number of structural features of the '<em>for statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.final_expressionImpl <em>final expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.final_expressionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfinal_expression()
   * @generated
   */
  int FINAL_EXPRESSION = 49;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FINAL_EXPRESSION__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>final expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FINAL_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.initial_expressionImpl <em>initial expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.initial_expressionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getinitial_expression()
   * @generated
   */
  int INITIAL_EXPRESSION = 50;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_EXPRESSION__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>initial expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.repeat_statementImpl <em>repeat statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.repeat_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrepeat_statement()
   * @generated
   */
  int REPEAT_STATEMENT = 51;

  /**
   * The feature id for the '<em><b>Statement sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT__STATEMENT_SEQUENCE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>repeat statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.while_statementImpl <em>while statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.while_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getwhile_statement()
   * @generated
   */
  int WHILE_STATEMENT = 52;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__STATEMENT = 1;

  /**
   * The number of structural features of the '<em>while statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.compound_statementImpl <em>compound statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.compound_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcompound_statement()
   * @generated
   */
  int COMPOUND_STATEMENT = 53;

  /**
   * The feature id for the '<em><b>Statement sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_STATEMENT__STATEMENT_SEQUENCE = 0;

  /**
   * The number of structural features of the '<em>compound statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_STATEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.declaration_partImpl <em>declaration part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.declaration_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getdeclaration_part()
   * @generated
   */
  int DECLARATION_PART = 54;

  /**
   * The feature id for the '<em><b>Label declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__LABEL_DECLARATION_PART = 0;

  /**
   * The feature id for the '<em><b>Constant definition part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__CONSTANT_DEFINITION_PART = 1;

  /**
   * The feature id for the '<em><b>Type definition part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__TYPE_DEFINITION_PART = 2;

  /**
   * The feature id for the '<em><b>Variable declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__VARIABLE_DECLARATION_PART = 3;

  /**
   * The feature id for the '<em><b>Procedure heading</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__PROCEDURE_HEADING = 4;

  /**
   * The feature id for the '<em><b>Procedure body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__PROCEDURE_BODY = 5;

  /**
   * The feature id for the '<em><b>Directive</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__DIRECTIVE = 6;

  /**
   * The feature id for the '<em><b>Procedure identification</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__PROCEDURE_IDENTIFICATION = 7;

  /**
   * The feature id for the '<em><b>Function heading</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__FUNCTION_HEADING = 8;

  /**
   * The feature id for the '<em><b>Function body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__FUNCTION_BODY = 9;

  /**
   * The feature id for the '<em><b>Function identification</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART__FUNCTION_IDENTIFICATION = 10;

  /**
   * The number of structural features of the '<em>declaration part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_PART_FEATURE_COUNT = 11;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.label_declaration_partImpl <em>label declaration part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.label_declaration_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel_declaration_part()
   * @generated
   */
  int LABEL_DECLARATION_PART = 55;

  /**
   * The feature id for the '<em><b>Label</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_PART__LABEL = 0;

  /**
   * The number of structural features of the '<em>label declaration part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.constant_definition_partImpl <em>constant definition part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.constant_definition_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition_part()
   * @generated
   */
  int CONSTANT_DEFINITION_PART = 56;

  /**
   * The feature id for the '<em><b>Constant definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART__CONSTANT_DEFINITION = 0;

  /**
   * The number of structural features of the '<em>constant definition part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.constant_definitionImpl <em>constant definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.constant_definitionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition()
   * @generated
   */
  int CONSTANT_DEFINITION = 57;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Constant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__CONSTANT = 1;

  /**
   * The number of structural features of the '<em>constant definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.constantImpl <em>constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.constantImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant()
   * @generated
   */
  int CONSTANT = 58;

  /**
   * The feature id for the '<em><b>Sign</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__SIGN = 0;

  /**
   * The feature id for the '<em><b>Constant identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__CONSTANT_IDENTIFIER = 1;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__NUMBER = 2;

  /**
   * The feature id for the '<em><b>Strings</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__STRINGS = 3;

  /**
   * The number of structural features of the '<em>constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.type_definition_partImpl <em>type definition part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.type_definition_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition_part()
   * @generated
   */
  int TYPE_DEFINITION_PART = 59;

  /**
   * The feature id for the '<em><b>Type definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART__TYPE_DEFINITION = 0;

  /**
   * The number of structural features of the '<em>type definition part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.type_definitionImpl <em>type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.type_definitionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition()
   * @generated
   */
  int TYPE_DEFINITION = 60;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION__TYPE = 1;

  /**
   * The number of structural features of the '<em>type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.typeImpl <em>type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype()
   * @generated
   */
  int TYPE = 61;

  /**
   * The feature id for the '<em><b>Simple type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__SIMPLE_TYPE = 0;

  /**
   * The feature id for the '<em><b>Structured type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__STRUCTURED_TYPE = 1;

  /**
   * The feature id for the '<em><b>Pointer type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__POINTER_TYPE = 2;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__TYPE_IDENTIFIER = 3;

  /**
   * The number of structural features of the '<em>type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.type_identifierImpl <em>type identifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.type_identifierImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_identifier()
   * @generated
   */
  int TYPE_IDENTIFIER = 62;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_IDENTIFIER__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>type identifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_IDENTIFIER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.pointer_typeImpl <em>pointer type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.pointer_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpointer_type()
   * @generated
   */
  int POINTER_TYPE = 63;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTER_TYPE__TYPE_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>pointer type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTER_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.structured_typeImpl <em>structured type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.structured_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstructured_type()
   * @generated
   */
  int STRUCTURED_TYPE = 64;

  /**
   * The feature id for the '<em><b>Unpacked structured type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE = 0;

  /**
   * The number of structural features of the '<em>structured type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl <em>unpacked structured type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getunpacked_structured_type()
   * @generated
   */
  int UNPACKED_STRUCTURED_TYPE = 65;

  /**
   * The feature id for the '<em><b>Array type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE = 0;

  /**
   * The feature id for the '<em><b>Record type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE__RECORD_TYPE = 1;

  /**
   * The feature id for the '<em><b>Set type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE__SET_TYPE = 2;

  /**
   * The feature id for the '<em><b>File type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE__FILE_TYPE = 3;

  /**
   * The number of structural features of the '<em>unpacked structured type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.file_typeImpl <em>file type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.file_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfile_type()
   * @generated
   */
  int FILE_TYPE = 66;

  /**
   * The feature id for the '<em><b>File component type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILE_TYPE__FILE_COMPONENT_TYPE = 0;

  /**
   * The number of structural features of the '<em>file type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILE_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.file_component_typeImpl <em>file component type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.file_component_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfile_component_type()
   * @generated
   */
  int FILE_COMPONENT_TYPE = 67;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILE_COMPONENT_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>file component type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILE_COMPONENT_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.set_typeImpl <em>set type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.set_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset_type()
   * @generated
   */
  int SET_TYPE = 68;

  /**
   * The feature id for the '<em><b>Base type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE__BASE_TYPE = 0;

  /**
   * The number of structural features of the '<em>set type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.base_typeImpl <em>base type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.base_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getbase_type()
   * @generated
   */
  int BASE_TYPE = 69;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>base type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.record_typeImpl <em>record type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.record_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrecord_type()
   * @generated
   */
  int RECORD_TYPE = 70;

  /**
   * The feature id for the '<em><b>Field list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE__FIELD_LIST = 0;

  /**
   * The number of structural features of the '<em>record type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.field_listImpl <em>field list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.field_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfield_list()
   * @generated
   */
  int FIELD_LIST = 71;

  /**
   * The feature id for the '<em><b>Fixed part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST__FIXED_PART = 0;

  /**
   * The feature id for the '<em><b>Variant part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST__VARIANT_PART = 1;

  /**
   * The number of structural features of the '<em>field list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.fixed_partImpl <em>fixed part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.fixed_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfixed_part()
   * @generated
   */
  int FIXED_PART = 72;

  /**
   * The feature id for the '<em><b>Record section</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIXED_PART__RECORD_SECTION = 0;

  /**
   * The number of structural features of the '<em>fixed part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIXED_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.record_sectionImpl <em>record section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.record_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrecord_section()
   * @generated
   */
  int RECORD_SECTION = 73;

  /**
   * The feature id for the '<em><b>Identifier list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION__IDENTIFIER_LIST = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION__TYPE = 1;

  /**
   * The number of structural features of the '<em>record section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variant_partImpl <em>variant part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variant_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariant_part()
   * @generated
   */
  int VARIANT_PART = 74;

  /**
   * The feature id for the '<em><b>Tag field</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__TAG_FIELD = 0;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__TYPE_IDENTIFIER = 1;

  /**
   * The feature id for the '<em><b>Variant</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__VARIANT = 2;

  /**
   * The number of structural features of the '<em>variant part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variantImpl <em>variant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variantImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariant()
   * @generated
   */
  int VARIANT = 75;

  /**
   * The feature id for the '<em><b>Case label list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT__CASE_LABEL_LIST = 0;

  /**
   * The feature id for the '<em><b>Field list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT__FIELD_LIST = 1;

  /**
   * The number of structural features of the '<em>variant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.tag_fieldImpl <em>tag field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.tag_fieldImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettag_field()
   * @generated
   */
  int TAG_FIELD = 76;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAG_FIELD__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>tag field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAG_FIELD_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.array_typeImpl <em>array type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.array_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getarray_type()
   * @generated
   */
  int ARRAY_TYPE = 77;

  /**
   * The feature id for the '<em><b>Index type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_TYPE__INDEX_TYPE = 0;

  /**
   * The feature id for the '<em><b>Element type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_TYPE__ELEMENT_TYPE = 1;

  /**
   * The number of structural features of the '<em>array type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.element_typeImpl <em>element type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.element_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getelement_type()
   * @generated
   */
  int ELEMENT_TYPE = 78;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>element type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.index_typeImpl <em>index type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.index_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getindex_type()
   * @generated
   */
  int INDEX_TYPE = 79;

  /**
   * The feature id for the '<em><b>Simple type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_TYPE__SIMPLE_TYPE = 0;

  /**
   * The number of structural features of the '<em>index type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.simple_typeImpl <em>simple type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.simple_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_type()
   * @generated
   */
  int SIMPLE_TYPE = 80;

  /**
   * The feature id for the '<em><b>Subrange type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE__SUBRANGE_TYPE = 0;

  /**
   * The feature id for the '<em><b>Enumerated type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE__ENUMERATED_TYPE = 1;

  /**
   * The number of structural features of the '<em>simple type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.enumerated_typeImpl <em>enumerated type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.enumerated_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getenumerated_type()
   * @generated
   */
  int ENUMERATED_TYPE = 81;

  /**
   * The feature id for the '<em><b>Identifier list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATED_TYPE__IDENTIFIER_LIST = 0;

  /**
   * The number of structural features of the '<em>enumerated type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATED_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.subrange_typeImpl <em>subrange type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.subrange_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsubrange_type()
   * @generated
   */
  int SUBRANGE_TYPE = 82;

  /**
   * The feature id for the '<em><b>Lower bound</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__LOWER_BOUND = 0;

  /**
   * The feature id for the '<em><b>Upper bound</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__UPPER_BOUND = 1;

  /**
   * The number of structural features of the '<em>subrange type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.lower_boundImpl <em>lower bound</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.lower_boundImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlower_bound()
   * @generated
   */
  int LOWER_BOUND = 83;

  /**
   * The feature id for the '<em><b>Constant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOWER_BOUND__CONSTANT = 0;

  /**
   * The number of structural features of the '<em>lower bound</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOWER_BOUND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.upper_boundImpl <em>upper bound</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.upper_boundImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getupper_bound()
   * @generated
   */
  int UPPER_BOUND = 84;

  /**
   * The feature id for the '<em><b>Constant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPPER_BOUND__CONSTANT = 0;

  /**
   * The number of structural features of the '<em>upper bound</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPPER_BOUND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl <em>variable declaration part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_declaration_part()
   * @generated
   */
  int VARIABLE_DECLARATION_PART = 85;

  /**
   * The feature id for the '<em><b>Variable declaration</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART__VARIABLE_DECLARATION = 0;

  /**
   * The number of structural features of the '<em>variable declaration part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_declarationImpl <em>variable declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_declarationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_declaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 86;

  /**
   * The feature id for the '<em><b>Identifier list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__IDENTIFIER_LIST = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__TYPE = 1;

  /**
   * The number of structural features of the '<em>variable declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_identificationImpl <em>function identification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_identificationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_identification()
   * @generated
   */
  int FUNCTION_IDENTIFICATION = 87;

  /**
   * The feature id for the '<em><b>Function identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_IDENTIFICATION__FUNCTION_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>function identification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_IDENTIFICATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_bodyImpl <em>function body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_bodyImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_body()
   * @generated
   */
  int FUNCTION_BODY = 88;

  /**
   * The feature id for the '<em><b>Function block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_BODY__FUNCTION_BLOCK = 0;

  /**
   * The number of structural features of the '<em>function body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_BODY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_identificationImpl <em>procedure identification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_identificationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_identification()
   * @generated
   */
  int PROCEDURE_IDENTIFICATION = 89;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_IDENTIFICATION__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>procedure identification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_IDENTIFICATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.directiveImpl <em>directive</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.directiveImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getdirective()
   * @generated
   */
  int DIRECTIVE = 90;

  /**
   * The feature id for the '<em><b>Compiler defined directives</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE__COMPILER_DEFINED_DIRECTIVES = 0;

  /**
   * The number of structural features of the '<em>directive</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIRECTIVE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.compiler_defined_directivesImpl <em>compiler defined directives</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.compiler_defined_directivesImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcompiler_defined_directives()
   * @generated
   */
  int COMPILER_DEFINED_DIRECTIVES = 91;

  /**
   * The feature id for the '<em><b>Procedure heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPILER_DEFINED_DIRECTIVES__PROCEDURE_HEADING = 0;

  /**
   * The number of structural features of the '<em>compiler defined directives</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPILER_DEFINED_DIRECTIVES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_bodyImpl <em>procedure body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_bodyImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_body()
   * @generated
   */
  int PROCEDURE_BODY = 92;

  /**
   * The feature id for the '<em><b>Procedure block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_BODY__PROCEDURE_BLOCK = 0;

  /**
   * The number of structural features of the '<em>procedure body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_BODY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_headingImpl <em>procedure heading</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_headingImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_heading()
   * @generated
   */
  int PROCEDURE_HEADING = 93;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_HEADING__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Formal parameter list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_HEADING__FORMAL_PARAMETER_LIST = 1;

  /**
   * The number of structural features of the '<em>procedure heading</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_HEADING_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl <em>formal parameter list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_list()
   * @generated
   */
  int FORMAL_PARAMETER_LIST = 94;

  /**
   * The feature id for the '<em><b>Formal parameter section</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION = 0;

  /**
   * The number of structural features of the '<em>formal parameter list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl <em>formal parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_section()
   * @generated
   */
  int FORMAL_PARAMETER_SECTION = 95;

  /**
   * The feature id for the '<em><b>Value parameter section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__VALUE_PARAMETER_SECTION = 0;

  /**
   * The feature id for the '<em><b>Variable parameter section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__VARIABLE_PARAMETER_SECTION = 1;

  /**
   * The feature id for the '<em><b>Procedure parameter section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__PROCEDURE_PARAMETER_SECTION = 2;

  /**
   * The feature id for the '<em><b>Function parameter section</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__FUNCTION_PARAMETER_SECTION = 3;

  /**
   * The number of structural features of the '<em>formal parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_parameter_sectionImpl <em>function parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_parameter_section()
   * @generated
   */
  int FUNCTION_PARAMETER_SECTION = 96;

  /**
   * The feature id for the '<em><b>Function heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PARAMETER_SECTION__FUNCTION_HEADING = 0;

  /**
   * The number of structural features of the '<em>function parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PARAMETER_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_headingImpl <em>function heading</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_headingImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_heading()
   * @generated
   */
  int FUNCTION_HEADING = 97;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Formal parameter list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING__FORMAL_PARAMETER_LIST = 1;

  /**
   * The feature id for the '<em><b>Result type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING__RESULT_TYPE = 2;

  /**
   * The number of structural features of the '<em>function heading</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.result_typeImpl <em>result type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.result_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getresult_type()
   * @generated
   */
  int RESULT_TYPE = 98;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT_TYPE__TYPE_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>result type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_parameter_sectionImpl <em>procedure parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_parameter_section()
   * @generated
   */
  int PROCEDURE_PARAMETER_SECTION = 99;

  /**
   * The feature id for the '<em><b>Procedure heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_PARAMETER_SECTION__PROCEDURE_HEADING = 0;

  /**
   * The number of structural features of the '<em>procedure parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_PARAMETER_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl <em>variable parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_parameter_section()
   * @generated
   */
  int VARIABLE_PARAMETER_SECTION = 100;

  /**
   * The feature id for the '<em><b>Identifier list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_PARAMETER_SECTION__IDENTIFIER_LIST = 0;

  /**
   * The feature id for the '<em><b>Parameter type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_PARAMETER_SECTION__PARAMETER_TYPE = 1;

  /**
   * The number of structural features of the '<em>variable parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_PARAMETER_SECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl <em>value parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvalue_parameter_section()
   * @generated
   */
  int VALUE_PARAMETER_SECTION = 101;

  /**
   * The feature id for the '<em><b>Identifier list</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_PARAMETER_SECTION__IDENTIFIER_LIST = 0;

  /**
   * The feature id for the '<em><b>Parameter type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_PARAMETER_SECTION__PARAMETER_TYPE = 1;

  /**
   * The number of structural features of the '<em>value parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_PARAMETER_SECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.parameter_typeImpl <em>parameter type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.parameter_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getparameter_type()
   * @generated
   */
  int PARAMETER_TYPE = 102;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_TYPE__TYPE_IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Conformant array schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_TYPE__CONFORMANT_ARRAY_SCHEMA = 1;

  /**
   * The number of structural features of the '<em>parameter type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.conformant_array_schemaImpl <em>conformant array schema</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.conformant_array_schemaImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconformant_array_schema()
   * @generated
   */
  int CONFORMANT_ARRAY_SCHEMA = 103;

  /**
   * The feature id for the '<em><b>Packed conformant array schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA = 0;

  /**
   * The feature id for the '<em><b>Unpacked conformant array schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA = 1;

  /**
   * The number of structural features of the '<em>conformant array schema</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONFORMANT_ARRAY_SCHEMA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.unpacked_conformant_array_schemaImpl <em>unpacked conformant array schema</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.unpacked_conformant_array_schemaImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getunpacked_conformant_array_schema()
   * @generated
   */
  int UNPACKED_CONFORMANT_ARRAY_SCHEMA = 104;

  /**
   * The feature id for the '<em><b>Bound specification</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_CONFORMANT_ARRAY_SCHEMA__BOUND_SPECIFICATION = 0;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_CONFORMANT_ARRAY_SCHEMA__TYPE_IDENTIFIER = 1;

  /**
   * The feature id for the '<em><b>Conformant array schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_CONFORMANT_ARRAY_SCHEMA__CONFORMANT_ARRAY_SCHEMA = 2;

  /**
   * The number of structural features of the '<em>unpacked conformant array schema</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_CONFORMANT_ARRAY_SCHEMA_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.bound_specificationImpl <em>bound specification</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.bound_specificationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getbound_specification()
   * @generated
   */
  int BOUND_SPECIFICATION = 105;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUND_SPECIFICATION__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Identifier2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUND_SPECIFICATION__IDENTIFIER2 = 1;

  /**
   * The feature id for the '<em><b>Ordinal type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUND_SPECIFICATION__ORDINAL_TYPE_IDENTIFIER = 2;

  /**
   * The number of structural features of the '<em>bound specification</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOUND_SPECIFICATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.ordinal_type_identifierImpl <em>ordinal type identifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.ordinal_type_identifierImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getordinal_type_identifier()
   * @generated
   */
  int ORDINAL_TYPE_IDENTIFIER = 106;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDINAL_TYPE_IDENTIFIER__TYPE_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>ordinal type identifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDINAL_TYPE_IDENTIFIER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.packed_conformant_array_schemaImpl <em>packed conformant array schema</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.packed_conformant_array_schemaImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpacked_conformant_array_schema()
   * @generated
   */
  int PACKED_CONFORMANT_ARRAY_SCHEMA = 107;

  /**
   * The feature id for the '<em><b>Bound specification</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKED_CONFORMANT_ARRAY_SCHEMA__BOUND_SPECIFICATION = 0;

  /**
   * The feature id for the '<em><b>Type identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKED_CONFORMANT_ARRAY_SCHEMA__TYPE_IDENTIFIER = 1;

  /**
   * The number of structural features of the '<em>packed conformant array schema</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PACKED_CONFORMANT_ARRAY_SCHEMA_FEATURE_COUNT = 2;


  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.Begin <em>Begin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Begin</em>'.
   * @see org.xtext.example.pascal.pascal.Begin
   * @generated
   */
  EClass getBegin();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.Begin#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.example.pascal.pascal.Begin#getElements()
   * @see #getBegin()
   * @generated
   */
  EReference getBegin_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.program <em>program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>program</em>'.
   * @see org.xtext.example.pascal.pascal.program
   * @generated
   */
  EClass getprogram();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.program#getProgram_heading <em>Program heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Program heading</em>'.
   * @see org.xtext.example.pascal.pascal.program#getProgram_heading()
   * @see #getprogram()
   * @generated
   */
  EReference getprogram_Program_heading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.program#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.pascal.pascal.program#getBlock()
   * @see #getprogram()
   * @generated
   */
  EReference getprogram_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.program_heading <em>program heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>program heading</em>'.
   * @see org.xtext.example.pascal.pascal.program_heading
   * @generated
   */
  EClass getprogram_heading();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.program_heading#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.program_heading#getIdentifier()
   * @see #getprogram_heading()
   * @generated
   */
  EAttribute getprogram_heading_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.program_heading#getIdentifier_list <em>Identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.program_heading#getIdentifier_list()
   * @see #getprogram_heading()
   * @generated
   */
  EReference getprogram_heading_Identifier_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.identifier_list <em>identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.identifier_list
   * @generated
   */
  EClass getidentifier_list();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.identifier_list#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.identifier_list#getIdentifier()
   * @see #getidentifier_list()
   * @generated
   */
  EAttribute getidentifier_list_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_block <em>procedure block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure block</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_block
   * @generated
   */
  EClass getprocedure_block();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_block#getDeclaration_part <em>Declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_block#getDeclaration_part()
   * @see #getprocedure_block()
   * @generated
   */
  EReference getprocedure_block_Declaration_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_block#getStatement_part <em>Statement part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement part</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_block#getStatement_part()
   * @see #getprocedure_block()
   * @generated
   */
  EReference getprocedure_block_Statement_part();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_block <em>function block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function block</em>'.
   * @see org.xtext.example.pascal.pascal.function_block
   * @generated
   */
  EClass getfunction_block();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_block#getDeclaration_part <em>Declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.function_block#getDeclaration_part()
   * @see #getfunction_block()
   * @generated
   */
  EReference getfunction_block_Declaration_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_block#getStatement_part <em>Statement part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement part</em>'.
   * @see org.xtext.example.pascal.pascal.function_block#getStatement_part()
   * @see #getfunction_block()
   * @generated
   */
  EReference getfunction_block_Statement_part();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.block <em>block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>block</em>'.
   * @see org.xtext.example.pascal.pascal.block
   * @generated
   */
  EClass getblock();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getDeclaration_part <em>Declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.block#getDeclaration_part()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Declaration_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getStatement_part <em>Statement part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement part</em>'.
   * @see org.xtext.example.pascal.pascal.block#getStatement_part()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Statement_part();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.statement_part <em>statement part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement part</em>'.
   * @see org.xtext.example.pascal.pascal.statement_part
   * @generated
   */
  EClass getstatement_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement_part#getStatement_sequence <em>Statement sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement sequence</em>'.
   * @see org.xtext.example.pascal.pascal.statement_part#getStatement_sequence()
   * @see #getstatement_part()
   * @generated
   */
  EReference getstatement_part_Statement_sequence();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.statement_sequence <em>statement sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement sequence</em>'.
   * @see org.xtext.example.pascal.pascal.statement_sequence
   * @generated
   */
  EClass getstatement_sequence();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.statement_sequence#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.statement_sequence#getStatement()
   * @see #getstatement_sequence()
   * @generated
   */
  EReference getstatement_sequence_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.statement <em>statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement</em>'.
   * @see org.xtext.example.pascal.pascal.statement
   * @generated
   */
  EClass getstatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label</em>'.
   * @see org.xtext.example.pascal.pascal.statement#getLabel()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_Label();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement#getSimple_statement <em>Simple statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple statement</em>'.
   * @see org.xtext.example.pascal.pascal.statement#getSimple_statement()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_Simple_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement#getStructured_statement <em>Structured statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Structured statement</em>'.
   * @see org.xtext.example.pascal.pascal.statement#getStructured_statement()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_Structured_statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.simple_statement <em>simple statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple statement</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement
   * @generated
   */
  EClass getsimple_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_statement#getAssignment_statement <em>Assignment statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Assignment statement</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement#getAssignment_statement()
   * @see #getsimple_statement()
   * @generated
   */
  EReference getsimple_statement_Assignment_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_statement#getProcedure_statement <em>Procedure statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure statement</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement#getProcedure_statement()
   * @see #getsimple_statement()
   * @generated
   */
  EReference getsimple_statement_Procedure_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_statement#getGoto_statement <em>Goto statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Goto statement</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement#getGoto_statement()
   * @see #getsimple_statement()
   * @generated
   */
  EReference getsimple_statement_Goto_statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.goto_statement <em>goto statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>goto statement</em>'.
   * @see org.xtext.example.pascal.pascal.goto_statement
   * @generated
   */
  EClass getgoto_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.goto_statement#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label</em>'.
   * @see org.xtext.example.pascal.pascal.goto_statement#getLabel()
   * @see #getgoto_statement()
   * @generated
   */
  EReference getgoto_statement_Label();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_statement <em>procedure statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure statement</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_statement
   * @generated
   */
  EClass getprocedure_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_statement#getProcedure_identifier <em>Procedure identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure identifier</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_statement#getProcedure_identifier()
   * @see #getprocedure_statement()
   * @generated
   */
  EReference getprocedure_statement_Procedure_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_statement#getActual_parameter_list <em>Actual parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_statement#getActual_parameter_list()
   * @see #getprocedure_statement()
   * @generated
   */
  EReference getprocedure_statement_Actual_parameter_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.actual_parameter_list <em>actual parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter_list
   * @generated
   */
  EClass getactual_parameter_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.actual_parameter_list#getActual_parameter <em>Actual parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Actual parameter</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter_list#getActual_parameter()
   * @see #getactual_parameter_list()
   * @generated
   */
  EReference getactual_parameter_list_Actual_parameter();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.actual_parameter <em>actual parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual parameter</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter
   * @generated
   */
  EClass getactual_parameter();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_parameter#getActual_value <em>Actual value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual value</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter#getActual_value()
   * @see #getactual_parameter()
   * @generated
   */
  EReference getactual_parameter_Actual_value();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_parameter#getActual_variable <em>Actual variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual variable</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter#getActual_variable()
   * @see #getactual_parameter()
   * @generated
   */
  EReference getactual_parameter_Actual_variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_parameter#getActual_procedure <em>Actual procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual procedure</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter#getActual_procedure()
   * @see #getactual_parameter()
   * @generated
   */
  EReference getactual_parameter_Actual_procedure();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_parameter#getActual_function <em>Actual function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual function</em>'.
   * @see org.xtext.example.pascal.pascal.actual_parameter#getActual_function()
   * @see #getactual_parameter()
   * @generated
   */
  EReference getactual_parameter_Actual_function();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.actual_function <em>actual function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual function</em>'.
   * @see org.xtext.example.pascal.pascal.actual_function
   * @generated
   */
  EClass getactual_function();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_function#getFunction_identifier <em>Function identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function identifier</em>'.
   * @see org.xtext.example.pascal.pascal.actual_function#getFunction_identifier()
   * @see #getactual_function()
   * @generated
   */
  EReference getactual_function_Function_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.actual_procedure <em>actual procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual procedure</em>'.
   * @see org.xtext.example.pascal.pascal.actual_procedure
   * @generated
   */
  EClass getactual_procedure();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_procedure#getProcedure_identifier <em>Procedure identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure identifier</em>'.
   * @see org.xtext.example.pascal.pascal.actual_procedure#getProcedure_identifier()
   * @see #getactual_procedure()
   * @generated
   */
  EReference getactual_procedure_Procedure_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.actual_variable <em>actual variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual variable</em>'.
   * @see org.xtext.example.pascal.pascal.actual_variable
   * @generated
   */
  EClass getactual_variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_variable#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.actual_variable#getVariable()
   * @see #getactual_variable()
   * @generated
   */
  EReference getactual_variable_Variable();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.actual_value <em>actual value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual value</em>'.
   * @see org.xtext.example.pascal.pascal.actual_value
   * @generated
   */
  EClass getactual_value();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.actual_value#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.actual_value#getExpression()
   * @see #getactual_value()
   * @generated
   */
  EReference getactual_value_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.identifier <em>identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>identifier</em>'.
   * @see org.xtext.example.pascal.pascal.identifier
   * @generated
   */
  EClass getidentifier();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.identifier#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.identifier#getIdentifier()
   * @see #getidentifier()
   * @generated
   */
  EAttribute getidentifier_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.assignment_statement <em>assignment statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>assignment statement</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement
   * @generated
   */
  EClass getassignment_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.assignment_statement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement#getVariable()
   * @see #getassignment_statement()
   * @generated
   */
  EReference getassignment_statement_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.assignment_statement#getFunction_identifier <em>Function identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function identifier</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement#getFunction_identifier()
   * @see #getassignment_statement()
   * @generated
   */
  EReference getassignment_statement_Function_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.assignment_statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement#getExpression()
   * @see #getassignment_statement()
   * @generated
   */
  EReference getassignment_statement_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.expression <em>expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expression</em>'.
   * @see org.xtext.example.pascal.pascal.expression
   * @generated
   */
  EClass getexpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.expression#getSimple_expression <em>Simple expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simple expression</em>'.
   * @see org.xtext.example.pascal.pascal.expression#getSimple_expression()
   * @see #getexpression()
   * @generated
   */
  EReference getexpression_Simple_expression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.expression#getRelational_operator <em>Relational operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Relational operator</em>'.
   * @see org.xtext.example.pascal.pascal.expression#getRelational_operator()
   * @see #getexpression()
   * @generated
   */
  EAttribute getexpression_Relational_operator();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.expression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.expression#getExpression()
   * @see #getexpression()
   * @generated
   */
  EReference getexpression_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.simple_expression <em>simple expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple expression</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression
   * @generated
   */
  EClass getsimple_expression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.simple_expression#getSign <em>Sign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sign</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression#getSign()
   * @see #getsimple_expression()
   * @generated
   */
  EAttribute getsimple_expression_Sign();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.simple_expression#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Term</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression#getTerm()
   * @see #getsimple_expression()
   * @generated
   */
  EReference getsimple_expression_Term();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.simple_expression#getAddition_operator <em>Addition operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Addition operator</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression#getAddition_operator()
   * @see #getsimple_expression()
   * @generated
   */
  EAttribute getsimple_expression_Addition_operator();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.term <em>term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>term</em>'.
   * @see org.xtext.example.pascal.pascal.term
   * @generated
   */
  EClass getterm();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.term#getFactor <em>Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Factor</em>'.
   * @see org.xtext.example.pascal.pascal.term#getFactor()
   * @see #getterm()
   * @generated
   */
  EReference getterm_Factor();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.term#getMultiplication_operator <em>Multiplication operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Multiplication operator</em>'.
   * @see org.xtext.example.pascal.pascal.term#getMultiplication_operator()
   * @see #getterm()
   * @generated
   */
  EAttribute getterm_Multiplication_operator();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.factor <em>factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>factor</em>'.
   * @see org.xtext.example.pascal.pascal.factor
   * @generated
   */
  EClass getfactor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getVariable()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getNumber()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Number();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getStrings <em>Strings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Strings</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getStrings()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Strings();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getSet <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getSet()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Set();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getIdentifier()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getFunction_designator <em>Function designator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function designator</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getFunction_designator()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Function_designator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getExpression()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getFactor <em>Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Factor</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getFactor()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Factor();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_designator <em>function designator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function designator</em>'.
   * @see org.xtext.example.pascal.pascal.function_designator
   * @generated
   */
  EClass getfunction_designator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_designator#getFunction_identifier <em>Function identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function identifier</em>'.
   * @see org.xtext.example.pascal.pascal.function_designator#getFunction_identifier()
   * @see #getfunction_designator()
   * @generated
   */
  EReference getfunction_designator_Function_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_designator#getActual_parameter_list <em>Actual parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.function_designator#getActual_parameter_list()
   * @see #getfunction_designator()
   * @generated
   */
  EReference getfunction_designator_Actual_parameter_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.set <em>set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>set</em>'.
   * @see org.xtext.example.pascal.pascal.set
   * @generated
   */
  EClass getset();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.set#getElement_list <em>Element list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element list</em>'.
   * @see org.xtext.example.pascal.pascal.set#getElement_list()
   * @see #getset()
   * @generated
   */
  EReference getset_Element_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.element_list <em>element list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>element list</em>'.
   * @see org.xtext.example.pascal.pascal.element_list
   * @generated
   */
  EClass getelement_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.element_list#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.element_list#getExpression()
   * @see #getelement_list()
   * @generated
   */
  EReference getelement_list_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.strings <em>strings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>strings</em>'.
   * @see org.xtext.example.pascal.pascal.strings
   * @generated
   */
  EClass getstrings();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.strings#getString_character <em>String character</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>String character</em>'.
   * @see org.xtext.example.pascal.pascal.strings#getString_character()
   * @see #getstrings()
   * @generated
   */
  EReference getstrings_String_character();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.string_character <em>string character</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>string character</em>'.
   * @see org.xtext.example.pascal.pascal.string_character
   * @generated
   */
  EClass getstring_character();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.string_character#getAny_character_except_quote <em>Any character except quote</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Any character except quote</em>'.
   * @see org.xtext.example.pascal.pascal.string_character#getAny_character_except_quote()
   * @see #getstring_character()
   * @generated
   */
  EReference getstring_character_Any_character_except_quote();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.any_character_except_quote <em>any character except quote</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>any character except quote</em>'.
   * @see org.xtext.example.pascal.pascal.any_character_except_quote
   * @generated
   */
  EClass getany_character_except_quote();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.any_character_except_quote#getProcedure_heading <em>Procedure heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure heading</em>'.
   * @see org.xtext.example.pascal.pascal.any_character_except_quote#getProcedure_heading()
   * @see #getany_character_except_quote()
   * @generated
   */
  EReference getany_character_except_quote_Procedure_heading();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.number <em>number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>number</em>'.
   * @see org.xtext.example.pascal.pascal.number
   * @generated
   */
  EClass getnumber();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.number#getInteger_number <em>Integer number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Integer number</em>'.
   * @see org.xtext.example.pascal.pascal.number#getInteger_number()
   * @see #getnumber()
   * @generated
   */
  EReference getnumber_Integer_number();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.number#getReal_number <em>Real number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Real number</em>'.
   * @see org.xtext.example.pascal.pascal.number#getReal_number()
   * @see #getnumber()
   * @generated
   */
  EReference getnumber_Real_number();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.real_number <em>real number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>real number</em>'.
   * @see org.xtext.example.pascal.pascal.real_number
   * @generated
   */
  EClass getreal_number();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.real_number#getDigit_sequence <em>Digit sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Digit sequence</em>'.
   * @see org.xtext.example.pascal.pascal.real_number#getDigit_sequence()
   * @see #getreal_number()
   * @generated
   */
  EReference getreal_number_Digit_sequence();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.real_number#getDigit_sequence2 <em>Digit sequence2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Digit sequence2</em>'.
   * @see org.xtext.example.pascal.pascal.real_number#getDigit_sequence2()
   * @see #getreal_number()
   * @generated
   */
  EReference getreal_number_Digit_sequence2();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.real_number#getScale_factor <em>Scale factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Scale factor</em>'.
   * @see org.xtext.example.pascal.pascal.real_number#getScale_factor()
   * @see #getreal_number()
   * @generated
   */
  EReference getreal_number_Scale_factor();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.scale_factor <em>scale factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>scale factor</em>'.
   * @see org.xtext.example.pascal.pascal.scale_factor
   * @generated
   */
  EClass getscale_factor();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.scale_factor#getSign <em>Sign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sign</em>'.
   * @see org.xtext.example.pascal.pascal.scale_factor#getSign()
   * @see #getscale_factor()
   * @generated
   */
  EAttribute getscale_factor_Sign();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.scale_factor#getDigit_sequence <em>Digit sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Digit sequence</em>'.
   * @see org.xtext.example.pascal.pascal.scale_factor#getDigit_sequence()
   * @see #getscale_factor()
   * @generated
   */
  EReference getscale_factor_Digit_sequence();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable <em>variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable</em>'.
   * @see org.xtext.example.pascal.pascal.variable
   * @generated
   */
  EClass getvariable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable#getEntire_variable <em>Entire variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Entire variable</em>'.
   * @see org.xtext.example.pascal.pascal.variable#getEntire_variable()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Entire_variable();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.variable#getExpression_list <em>Expression list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression list</em>'.
   * @see org.xtext.example.pascal.pascal.variable#getExpression_list()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Expression_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.variable#getField_identifier <em>Field identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Field identifier</em>'.
   * @see org.xtext.example.pascal.pascal.variable#getField_identifier()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Field_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.entire_variable <em>entire variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>entire variable</em>'.
   * @see org.xtext.example.pascal.pascal.entire_variable
   * @generated
   */
  EClass getentire_variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.entire_variable#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.entire_variable#getIdentifier()
   * @see #getentire_variable()
   * @generated
   */
  EReference getentire_variable_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.expression_list <em>expression list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expression list</em>'.
   * @see org.xtext.example.pascal.pascal.expression_list
   * @generated
   */
  EClass getexpression_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.expression_list#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.expression_list#getExpression()
   * @see #getexpression_list()
   * @generated
   */
  EReference getexpression_list_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.label <em>label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>label</em>'.
   * @see org.xtext.example.pascal.pascal.label
   * @generated
   */
  EClass getlabel();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.label#getInteger_number <em>Integer number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Integer number</em>'.
   * @see org.xtext.example.pascal.pascal.label#getInteger_number()
   * @see #getlabel()
   * @generated
   */
  EReference getlabel_Integer_number();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.integer_number <em>integer number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>integer number</em>'.
   * @see org.xtext.example.pascal.pascal.integer_number
   * @generated
   */
  EClass getinteger_number();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.integer_number#getDigit_sequence <em>Digit sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Digit sequence</em>'.
   * @see org.xtext.example.pascal.pascal.integer_number#getDigit_sequence()
   * @see #getinteger_number()
   * @generated
   */
  EReference getinteger_number_Digit_sequence();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.digit_sequence <em>digit sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>digit sequence</em>'.
   * @see org.xtext.example.pascal.pascal.digit_sequence
   * @generated
   */
  EClass getdigit_sequence();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.digit_sequence#getSign <em>Sign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sign</em>'.
   * @see org.xtext.example.pascal.pascal.digit_sequence#getSign()
   * @see #getdigit_sequence()
   * @generated
   */
  EAttribute getdigit_sequence_Sign();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.digit_sequence#getUnsigned_digit_sequence <em>Unsigned digit sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Unsigned digit sequence</em>'.
   * @see org.xtext.example.pascal.pascal.digit_sequence#getUnsigned_digit_sequence()
   * @see #getdigit_sequence()
   * @generated
   */
  EAttribute getdigit_sequence_Unsigned_digit_sequence();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.structured_statement <em>structured statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>structured statement</em>'.
   * @see org.xtext.example.pascal.pascal.structured_statement
   * @generated
   */
  EClass getstructured_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.structured_statement#getCompound_statement <em>Compound statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Compound statement</em>'.
   * @see org.xtext.example.pascal.pascal.structured_statement#getCompound_statement()
   * @see #getstructured_statement()
   * @generated
   */
  EReference getstructured_statement_Compound_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.structured_statement#getRepetitive_statement <em>Repetitive statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Repetitive statement</em>'.
   * @see org.xtext.example.pascal.pascal.structured_statement#getRepetitive_statement()
   * @see #getstructured_statement()
   * @generated
   */
  EReference getstructured_statement_Repetitive_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.structured_statement#getConditional_statement <em>Conditional statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Conditional statement</em>'.
   * @see org.xtext.example.pascal.pascal.structured_statement#getConditional_statement()
   * @see #getstructured_statement()
   * @generated
   */
  EReference getstructured_statement_Conditional_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.structured_statement#getWith_statement <em>With statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>With statement</em>'.
   * @see org.xtext.example.pascal.pascal.structured_statement#getWith_statement()
   * @see #getstructured_statement()
   * @generated
   */
  EReference getstructured_statement_With_statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.with_statement <em>with statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>with statement</em>'.
   * @see org.xtext.example.pascal.pascal.with_statement
   * @generated
   */
  EClass getwith_statement();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.with_statement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.with_statement#getVariable()
   * @see #getwith_statement()
   * @generated
   */
  EReference getwith_statement_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.with_statement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.with_statement#getStatement()
   * @see #getwith_statement()
   * @generated
   */
  EReference getwith_statement_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.conditional_statement <em>conditional statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>conditional statement</em>'.
   * @see org.xtext.example.pascal.pascal.conditional_statement
   * @generated
   */
  EClass getconditional_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.conditional_statement#getIf_statement <em>If statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>If statement</em>'.
   * @see org.xtext.example.pascal.pascal.conditional_statement#getIf_statement()
   * @see #getconditional_statement()
   * @generated
   */
  EReference getconditional_statement_If_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.conditional_statement#getCase_statement <em>Case statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Case statement</em>'.
   * @see org.xtext.example.pascal.pascal.conditional_statement#getCase_statement()
   * @see #getconditional_statement()
   * @generated
   */
  EReference getconditional_statement_Case_statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.case_statement <em>case statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>case statement</em>'.
   * @see org.xtext.example.pascal.pascal.case_statement
   * @generated
   */
  EClass getcase_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.case_statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.case_statement#getExpression()
   * @see #getcase_statement()
   * @generated
   */
  EReference getcase_statement_Expression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.case_statement#getCase_limb <em>Case limb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Case limb</em>'.
   * @see org.xtext.example.pascal.pascal.case_statement#getCase_limb()
   * @see #getcase_statement()
   * @generated
   */
  EReference getcase_statement_Case_limb();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.case_limb <em>case limb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>case limb</em>'.
   * @see org.xtext.example.pascal.pascal.case_limb
   * @generated
   */
  EClass getcase_limb();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.case_limb#getCase_label_list <em>Case label list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Case label list</em>'.
   * @see org.xtext.example.pascal.pascal.case_limb#getCase_label_list()
   * @see #getcase_limb()
   * @generated
   */
  EReference getcase_limb_Case_label_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.case_limb#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.case_limb#getStatement()
   * @see #getcase_limb()
   * @generated
   */
  EReference getcase_limb_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.case_label_list <em>case label list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>case label list</em>'.
   * @see org.xtext.example.pascal.pascal.case_label_list
   * @generated
   */
  EClass getcase_label_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.case_label_list#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constant</em>'.
   * @see org.xtext.example.pascal.pascal.case_label_list#getConstant()
   * @see #getcase_label_list()
   * @generated
   */
  EReference getcase_label_list_Constant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.if_statement <em>if statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>if statement</em>'.
   * @see org.xtext.example.pascal.pascal.if_statement
   * @generated
   */
  EClass getif_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.if_statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.if_statement#getExpression()
   * @see #getif_statement()
   * @generated
   */
  EReference getif_statement_Expression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.if_statement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.if_statement#getStatement()
   * @see #getif_statement()
   * @generated
   */
  EReference getif_statement_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.repetitive_statement <em>repetitive statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>repetitive statement</em>'.
   * @see org.xtext.example.pascal.pascal.repetitive_statement
   * @generated
   */
  EClass getrepetitive_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.repetitive_statement#getWhile_statement <em>While statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>While statement</em>'.
   * @see org.xtext.example.pascal.pascal.repetitive_statement#getWhile_statement()
   * @see #getrepetitive_statement()
   * @generated
   */
  EReference getrepetitive_statement_While_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.repetitive_statement#getRepeat_statement <em>Repeat statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Repeat statement</em>'.
   * @see org.xtext.example.pascal.pascal.repetitive_statement#getRepeat_statement()
   * @see #getrepetitive_statement()
   * @generated
   */
  EReference getrepetitive_statement_Repeat_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.repetitive_statement#getFor_statement <em>For statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>For statement</em>'.
   * @see org.xtext.example.pascal.pascal.repetitive_statement#getFor_statement()
   * @see #getrepetitive_statement()
   * @generated
   */
  EReference getrepetitive_statement_For_statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.for_statement <em>for statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>for statement</em>'.
   * @see org.xtext.example.pascal.pascal.for_statement
   * @generated
   */
  EClass getfor_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.for_statement#getVariable_identifier <em>Variable identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable identifier</em>'.
   * @see org.xtext.example.pascal.pascal.for_statement#getVariable_identifier()
   * @see #getfor_statement()
   * @generated
   */
  EReference getfor_statement_Variable_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.for_statement#getInitial_expression <em>Initial expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Initial expression</em>'.
   * @see org.xtext.example.pascal.pascal.for_statement#getInitial_expression()
   * @see #getfor_statement()
   * @generated
   */
  EReference getfor_statement_Initial_expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.for_statement#getFinal_expression <em>Final expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Final expression</em>'.
   * @see org.xtext.example.pascal.pascal.for_statement#getFinal_expression()
   * @see #getfor_statement()
   * @generated
   */
  EReference getfor_statement_Final_expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.for_statement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.for_statement#getStatement()
   * @see #getfor_statement()
   * @generated
   */
  EReference getfor_statement_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.final_expression <em>final expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>final expression</em>'.
   * @see org.xtext.example.pascal.pascal.final_expression
   * @generated
   */
  EClass getfinal_expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.final_expression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.final_expression#getExpression()
   * @see #getfinal_expression()
   * @generated
   */
  EReference getfinal_expression_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.initial_expression <em>initial expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>initial expression</em>'.
   * @see org.xtext.example.pascal.pascal.initial_expression
   * @generated
   */
  EClass getinitial_expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.initial_expression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.initial_expression#getExpression()
   * @see #getinitial_expression()
   * @generated
   */
  EReference getinitial_expression_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.repeat_statement <em>repeat statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>repeat statement</em>'.
   * @see org.xtext.example.pascal.pascal.repeat_statement
   * @generated
   */
  EClass getrepeat_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.repeat_statement#getStatement_sequence <em>Statement sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement sequence</em>'.
   * @see org.xtext.example.pascal.pascal.repeat_statement#getStatement_sequence()
   * @see #getrepeat_statement()
   * @generated
   */
  EReference getrepeat_statement_Statement_sequence();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.repeat_statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.repeat_statement#getExpression()
   * @see #getrepeat_statement()
   * @generated
   */
  EReference getrepeat_statement_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.while_statement <em>while statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>while statement</em>'.
   * @see org.xtext.example.pascal.pascal.while_statement
   * @generated
   */
  EClass getwhile_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.while_statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.while_statement#getExpression()
   * @see #getwhile_statement()
   * @generated
   */
  EReference getwhile_statement_Expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.while_statement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.while_statement#getStatement()
   * @see #getwhile_statement()
   * @generated
   */
  EReference getwhile_statement_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.compound_statement <em>compound statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>compound statement</em>'.
   * @see org.xtext.example.pascal.pascal.compound_statement
   * @generated
   */
  EClass getcompound_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.compound_statement#getStatement_sequence <em>Statement sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement sequence</em>'.
   * @see org.xtext.example.pascal.pascal.compound_statement#getStatement_sequence()
   * @see #getcompound_statement()
   * @generated
   */
  EReference getcompound_statement_Statement_sequence();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.declaration_part <em>declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part
   * @generated
   */
  EClass getdeclaration_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.declaration_part#getLabel_declaration_part <em>Label declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getLabel_declaration_part()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Label_declaration_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.declaration_part#getConstant_definition_part <em>Constant definition part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant definition part</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getConstant_definition_part()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Constant_definition_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.declaration_part#getType_definition_part <em>Type definition part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type definition part</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getType_definition_part()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Type_definition_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.declaration_part#getVariable_declaration_part <em>Variable declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getVariable_declaration_part()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Variable_declaration_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getProcedure_heading <em>Procedure heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Procedure heading</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getProcedure_heading()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Procedure_heading();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getProcedure_body <em>Procedure body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Procedure body</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getProcedure_body()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Procedure_body();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getDirective <em>Directive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Directive</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getDirective()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Directive();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getProcedure_identification <em>Procedure identification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Procedure identification</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getProcedure_identification()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Procedure_identification();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getFunction_heading <em>Function heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Function heading</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getFunction_heading()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Function_heading();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getFunction_body <em>Function body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Function body</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getFunction_body()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Function_body();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.declaration_part#getFunction_identification <em>Function identification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Function identification</em>'.
   * @see org.xtext.example.pascal.pascal.declaration_part#getFunction_identification()
   * @see #getdeclaration_part()
   * @generated
   */
  EReference getdeclaration_part_Function_identification();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.label_declaration_part <em>label declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>label declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.label_declaration_part
   * @generated
   */
  EClass getlabel_declaration_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.label_declaration_part#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Label</em>'.
   * @see org.xtext.example.pascal.pascal.label_declaration_part#getLabel()
   * @see #getlabel_declaration_part()
   * @generated
   */
  EReference getlabel_declaration_part_Label();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.constant_definition_part <em>constant definition part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant definition part</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition_part
   * @generated
   */
  EClass getconstant_definition_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.constant_definition_part#getConstant_definition <em>Constant definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constant definition</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition_part#getConstant_definition()
   * @see #getconstant_definition_part()
   * @generated
   */
  EReference getconstant_definition_part_Constant_definition();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.constant_definition <em>constant definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant definition</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition
   * @generated
   */
  EClass getconstant_definition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant_definition#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition#getIdentifier()
   * @see #getconstant_definition()
   * @generated
   */
  EReference getconstant_definition_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant_definition#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition#getConstant()
   * @see #getconstant_definition()
   * @generated
   */
  EReference getconstant_definition_Constant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.constant <em>constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant</em>'.
   * @see org.xtext.example.pascal.pascal.constant
   * @generated
   */
  EClass getconstant();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.constant#getSign <em>Sign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sign</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getSign()
   * @see #getconstant()
   * @generated
   */
  EAttribute getconstant_Sign();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant#getConstant_identifier <em>Constant identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant identifier</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getConstant_identifier()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Constant_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getNumber()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Number();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant#getStrings <em>Strings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Strings</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getStrings()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Strings();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type_definition_part <em>type definition part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type definition part</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition_part
   * @generated
   */
  EClass gettype_definition_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.type_definition_part#getType_definition <em>Type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type definition</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition_part#getType_definition()
   * @see #gettype_definition_part()
   * @generated
   */
  EReference gettype_definition_part_Type_definition();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type_definition <em>type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type definition</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition
   * @generated
   */
  EClass gettype_definition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type_definition#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition#getIdentifier()
   * @see #gettype_definition()
   * @generated
   */
  EReference gettype_definition_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type_definition#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition#getType()
   * @see #gettype_definition()
   * @generated
   */
  EReference gettype_definition_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type <em>type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type</em>'.
   * @see org.xtext.example.pascal.pascal.type
   * @generated
   */
  EClass gettype();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getSimple_type <em>Simple type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple type</em>'.
   * @see org.xtext.example.pascal.pascal.type#getSimple_type()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Simple_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getStructured_type <em>Structured type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Structured type</em>'.
   * @see org.xtext.example.pascal.pascal.type#getStructured_type()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Structured_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getPointer_type <em>Pointer type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pointer type</em>'.
   * @see org.xtext.example.pascal.pascal.type#getPointer_type()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Pointer_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.type#getType_identifier()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Type_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type_identifier <em>type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.type_identifier
   * @generated
   */
  EClass gettype_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type_identifier#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.type_identifier#getIdentifier()
   * @see #gettype_identifier()
   * @generated
   */
  EReference gettype_identifier_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.pointer_type <em>pointer type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>pointer type</em>'.
   * @see org.xtext.example.pascal.pascal.pointer_type
   * @generated
   */
  EClass getpointer_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.pointer_type#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.pointer_type#getType_identifier()
   * @see #getpointer_type()
   * @generated
   */
  EReference getpointer_type_Type_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.structured_type <em>structured type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>structured type</em>'.
   * @see org.xtext.example.pascal.pascal.structured_type
   * @generated
   */
  EClass getstructured_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.structured_type#getUnpacked_structured_type <em>Unpacked structured type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unpacked structured type</em>'.
   * @see org.xtext.example.pascal.pascal.structured_type#getUnpacked_structured_type()
   * @see #getstructured_type()
   * @generated
   */
  EReference getstructured_type_Unpacked_structured_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.unpacked_structured_type <em>unpacked structured type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unpacked structured type</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_structured_type
   * @generated
   */
  EClass getunpacked_structured_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_structured_type#getArray_type <em>Array type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array type</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_structured_type#getArray_type()
   * @see #getunpacked_structured_type()
   * @generated
   */
  EReference getunpacked_structured_type_Array_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_structured_type#getRecord_type <em>Record type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Record type</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_structured_type#getRecord_type()
   * @see #getunpacked_structured_type()
   * @generated
   */
  EReference getunpacked_structured_type_Record_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_structured_type#getSet_type <em>Set type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set type</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_structured_type#getSet_type()
   * @see #getunpacked_structured_type()
   * @generated
   */
  EReference getunpacked_structured_type_Set_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_structured_type#getFile_type <em>File type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>File type</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_structured_type#getFile_type()
   * @see #getunpacked_structured_type()
   * @generated
   */
  EReference getunpacked_structured_type_File_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.file_type <em>file type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>file type</em>'.
   * @see org.xtext.example.pascal.pascal.file_type
   * @generated
   */
  EClass getfile_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.file_type#getFile_component_type <em>File component type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>File component type</em>'.
   * @see org.xtext.example.pascal.pascal.file_type#getFile_component_type()
   * @see #getfile_type()
   * @generated
   */
  EReference getfile_type_File_component_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.file_component_type <em>file component type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>file component type</em>'.
   * @see org.xtext.example.pascal.pascal.file_component_type
   * @generated
   */
  EClass getfile_component_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.file_component_type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.file_component_type#getType()
   * @see #getfile_component_type()
   * @generated
   */
  EReference getfile_component_type_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.set_type <em>set type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>set type</em>'.
   * @see org.xtext.example.pascal.pascal.set_type
   * @generated
   */
  EClass getset_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.set_type#getBase_type <em>Base type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Base type</em>'.
   * @see org.xtext.example.pascal.pascal.set_type#getBase_type()
   * @see #getset_type()
   * @generated
   */
  EReference getset_type_Base_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.base_type <em>base type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>base type</em>'.
   * @see org.xtext.example.pascal.pascal.base_type
   * @generated
   */
  EClass getbase_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.base_type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.base_type#getType()
   * @see #getbase_type()
   * @generated
   */
  EReference getbase_type_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.record_type <em>record type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>record type</em>'.
   * @see org.xtext.example.pascal.pascal.record_type
   * @generated
   */
  EClass getrecord_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.record_type#getField_list <em>Field list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field list</em>'.
   * @see org.xtext.example.pascal.pascal.record_type#getField_list()
   * @see #getrecord_type()
   * @generated
   */
  EReference getrecord_type_Field_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.field_list <em>field list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>field list</em>'.
   * @see org.xtext.example.pascal.pascal.field_list
   * @generated
   */
  EClass getfield_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.field_list#getFixed_part <em>Fixed part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fixed part</em>'.
   * @see org.xtext.example.pascal.pascal.field_list#getFixed_part()
   * @see #getfield_list()
   * @generated
   */
  EReference getfield_list_Fixed_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.field_list#getVariant_part <em>Variant part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variant part</em>'.
   * @see org.xtext.example.pascal.pascal.field_list#getVariant_part()
   * @see #getfield_list()
   * @generated
   */
  EReference getfield_list_Variant_part();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.fixed_part <em>fixed part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fixed part</em>'.
   * @see org.xtext.example.pascal.pascal.fixed_part
   * @generated
   */
  EClass getfixed_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.fixed_part#getRecord_section <em>Record section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Record section</em>'.
   * @see org.xtext.example.pascal.pascal.fixed_part#getRecord_section()
   * @see #getfixed_part()
   * @generated
   */
  EReference getfixed_part_Record_section();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.record_section <em>record section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>record section</em>'.
   * @see org.xtext.example.pascal.pascal.record_section
   * @generated
   */
  EClass getrecord_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.record_section#getIdentifier_list <em>Identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.record_section#getIdentifier_list()
   * @see #getrecord_section()
   * @generated
   */
  EReference getrecord_section_Identifier_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.record_section#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.record_section#getType()
   * @see #getrecord_section()
   * @generated
   */
  EReference getrecord_section_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variant_part <em>variant part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variant part</em>'.
   * @see org.xtext.example.pascal.pascal.variant_part
   * @generated
   */
  EClass getvariant_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variant_part#getTag_field <em>Tag field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tag field</em>'.
   * @see org.xtext.example.pascal.pascal.variant_part#getTag_field()
   * @see #getvariant_part()
   * @generated
   */
  EReference getvariant_part_Tag_field();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variant_part#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.variant_part#getType_identifier()
   * @see #getvariant_part()
   * @generated
   */
  EReference getvariant_part_Type_identifier();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.variant_part#getVariant <em>Variant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variant</em>'.
   * @see org.xtext.example.pascal.pascal.variant_part#getVariant()
   * @see #getvariant_part()
   * @generated
   */
  EReference getvariant_part_Variant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variant <em>variant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variant</em>'.
   * @see org.xtext.example.pascal.pascal.variant
   * @generated
   */
  EClass getvariant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variant#getCase_label_list <em>Case label list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Case label list</em>'.
   * @see org.xtext.example.pascal.pascal.variant#getCase_label_list()
   * @see #getvariant()
   * @generated
   */
  EReference getvariant_Case_label_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variant#getField_list <em>Field list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field list</em>'.
   * @see org.xtext.example.pascal.pascal.variant#getField_list()
   * @see #getvariant()
   * @generated
   */
  EReference getvariant_Field_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.tag_field <em>tag field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tag field</em>'.
   * @see org.xtext.example.pascal.pascal.tag_field
   * @generated
   */
  EClass gettag_field();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.tag_field#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.tag_field#getIdentifier()
   * @see #gettag_field()
   * @generated
   */
  EReference gettag_field_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.array_type <em>array type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>array type</em>'.
   * @see org.xtext.example.pascal.pascal.array_type
   * @generated
   */
  EClass getarray_type();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.array_type#getIndex_type <em>Index type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Index type</em>'.
   * @see org.xtext.example.pascal.pascal.array_type#getIndex_type()
   * @see #getarray_type()
   * @generated
   */
  EReference getarray_type_Index_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.array_type#getElement_type <em>Element type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Element type</em>'.
   * @see org.xtext.example.pascal.pascal.array_type#getElement_type()
   * @see #getarray_type()
   * @generated
   */
  EReference getarray_type_Element_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.element_type <em>element type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>element type</em>'.
   * @see org.xtext.example.pascal.pascal.element_type
   * @generated
   */
  EClass getelement_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.element_type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.element_type#getType()
   * @see #getelement_type()
   * @generated
   */
  EReference getelement_type_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.index_type <em>index type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>index type</em>'.
   * @see org.xtext.example.pascal.pascal.index_type
   * @generated
   */
  EClass getindex_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.index_type#getSimple_type <em>Simple type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple type</em>'.
   * @see org.xtext.example.pascal.pascal.index_type#getSimple_type()
   * @see #getindex_type()
   * @generated
   */
  EReference getindex_type_Simple_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.simple_type <em>simple type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple type</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type
   * @generated
   */
  EClass getsimple_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_type#getSubrange_type <em>Subrange type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Subrange type</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type#getSubrange_type()
   * @see #getsimple_type()
   * @generated
   */
  EReference getsimple_type_Subrange_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_type#getEnumerated_type <em>Enumerated type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Enumerated type</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type#getEnumerated_type()
   * @see #getsimple_type()
   * @generated
   */
  EReference getsimple_type_Enumerated_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.enumerated_type <em>enumerated type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>enumerated type</em>'.
   * @see org.xtext.example.pascal.pascal.enumerated_type
   * @generated
   */
  EClass getenumerated_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.enumerated_type#getIdentifier_list <em>Identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.enumerated_type#getIdentifier_list()
   * @see #getenumerated_type()
   * @generated
   */
  EReference getenumerated_type_Identifier_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.subrange_type <em>subrange type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>subrange type</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type
   * @generated
   */
  EClass getsubrange_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.subrange_type#getLower_bound <em>Lower bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lower bound</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type#getLower_bound()
   * @see #getsubrange_type()
   * @generated
   */
  EReference getsubrange_type_Lower_bound();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.subrange_type#getUpper_bound <em>Upper bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Upper bound</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type#getUpper_bound()
   * @see #getsubrange_type()
   * @generated
   */
  EReference getsubrange_type_Upper_bound();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.lower_bound <em>lower bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>lower bound</em>'.
   * @see org.xtext.example.pascal.pascal.lower_bound
   * @generated
   */
  EClass getlower_bound();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.lower_bound#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant</em>'.
   * @see org.xtext.example.pascal.pascal.lower_bound#getConstant()
   * @see #getlower_bound()
   * @generated
   */
  EReference getlower_bound_Constant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.upper_bound <em>upper bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>upper bound</em>'.
   * @see org.xtext.example.pascal.pascal.upper_bound
   * @generated
   */
  EClass getupper_bound();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.upper_bound#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant</em>'.
   * @see org.xtext.example.pascal.pascal.upper_bound#getConstant()
   * @see #getupper_bound()
   * @generated
   */
  EReference getupper_bound_Constant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_declaration_part <em>variable declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration_part
   * @generated
   */
  EClass getvariable_declaration_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.variable_declaration_part#getVariable_declaration <em>Variable declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variable declaration</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration_part#getVariable_declaration()
   * @see #getvariable_declaration_part()
   * @generated
   */
  EReference getvariable_declaration_part_Variable_declaration();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_declaration <em>variable declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable declaration</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration
   * @generated
   */
  EClass getvariable_declaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_declaration#getIdentifier_list <em>Identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration#getIdentifier_list()
   * @see #getvariable_declaration()
   * @generated
   */
  EReference getvariable_declaration_Identifier_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_declaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration#getType()
   * @see #getvariable_declaration()
   * @generated
   */
  EReference getvariable_declaration_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_identification <em>function identification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function identification</em>'.
   * @see org.xtext.example.pascal.pascal.function_identification
   * @generated
   */
  EClass getfunction_identification();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_identification#getFunction_identifier <em>Function identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function identifier</em>'.
   * @see org.xtext.example.pascal.pascal.function_identification#getFunction_identifier()
   * @see #getfunction_identification()
   * @generated
   */
  EReference getfunction_identification_Function_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_body <em>function body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function body</em>'.
   * @see org.xtext.example.pascal.pascal.function_body
   * @generated
   */
  EClass getfunction_body();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_body#getFunction_block <em>Function block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function block</em>'.
   * @see org.xtext.example.pascal.pascal.function_body#getFunction_block()
   * @see #getfunction_body()
   * @generated
   */
  EReference getfunction_body_Function_block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_identification <em>procedure identification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure identification</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_identification
   * @generated
   */
  EClass getprocedure_identification();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_identification#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_identification#getIdentifier()
   * @see #getprocedure_identification()
   * @generated
   */
  EReference getprocedure_identification_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.directive <em>directive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>directive</em>'.
   * @see org.xtext.example.pascal.pascal.directive
   * @generated
   */
  EClass getdirective();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.directive#getCompiler_defined_directives <em>Compiler defined directives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Compiler defined directives</em>'.
   * @see org.xtext.example.pascal.pascal.directive#getCompiler_defined_directives()
   * @see #getdirective()
   * @generated
   */
  EReference getdirective_Compiler_defined_directives();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.compiler_defined_directives <em>compiler defined directives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>compiler defined directives</em>'.
   * @see org.xtext.example.pascal.pascal.compiler_defined_directives
   * @generated
   */
  EClass getcompiler_defined_directives();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.compiler_defined_directives#getProcedure_heading <em>Procedure heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure heading</em>'.
   * @see org.xtext.example.pascal.pascal.compiler_defined_directives#getProcedure_heading()
   * @see #getcompiler_defined_directives()
   * @generated
   */
  EReference getcompiler_defined_directives_Procedure_heading();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_body <em>procedure body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure body</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_body
   * @generated
   */
  EClass getprocedure_body();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_body#getProcedure_block <em>Procedure block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure block</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_body#getProcedure_block()
   * @see #getprocedure_body()
   * @generated
   */
  EReference getprocedure_body_Procedure_block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_heading <em>procedure heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure heading</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_heading
   * @generated
   */
  EClass getprocedure_heading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_heading#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_heading#getIdentifier()
   * @see #getprocedure_heading()
   * @generated
   */
  EReference getprocedure_heading_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_heading#getFormal_parameter_list <em>Formal parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_heading#getFormal_parameter_list()
   * @see #getprocedure_heading()
   * @generated
   */
  EReference getprocedure_heading_Formal_parameter_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.formal_parameter_list <em>formal parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formal parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_list
   * @generated
   */
  EClass getformal_parameter_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.formal_parameter_list#getFormal_parameter_section <em>Formal parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Formal parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_list#getFormal_parameter_section()
   * @see #getformal_parameter_list()
   * @generated
   */
  EReference getformal_parameter_list_Formal_parameter_section();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.formal_parameter_section <em>formal parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formal parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section
   * @generated
   */
  EClass getformal_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getValue_parameter_section <em>Value parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getValue_parameter_section()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Value_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getVariable_parameter_section <em>Variable parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getVariable_parameter_section()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Variable_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getProcedure_parameter_section <em>Procedure parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getProcedure_parameter_section()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Procedure_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getFunction_parameter_section <em>Function parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getFunction_parameter_section()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Function_parameter_section();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_parameter_section <em>function parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.function_parameter_section
   * @generated
   */
  EClass getfunction_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_parameter_section#getFunction_heading <em>Function heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function heading</em>'.
   * @see org.xtext.example.pascal.pascal.function_parameter_section#getFunction_heading()
   * @see #getfunction_parameter_section()
   * @generated
   */
  EReference getfunction_parameter_section_Function_heading();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_heading <em>function heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function heading</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading
   * @generated
   */
  EClass getfunction_heading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_heading#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading#getIdentifier()
   * @see #getfunction_heading()
   * @generated
   */
  EReference getfunction_heading_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_heading#getFormal_parameter_list <em>Formal parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading#getFormal_parameter_list()
   * @see #getfunction_heading()
   * @generated
   */
  EReference getfunction_heading_Formal_parameter_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_heading#getResult_type <em>Result type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Result type</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading#getResult_type()
   * @see #getfunction_heading()
   * @generated
   */
  EReference getfunction_heading_Result_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.result_type <em>result type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>result type</em>'.
   * @see org.xtext.example.pascal.pascal.result_type
   * @generated
   */
  EClass getresult_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.result_type#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.result_type#getType_identifier()
   * @see #getresult_type()
   * @generated
   */
  EReference getresult_type_Type_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_parameter_section <em>procedure parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_parameter_section
   * @generated
   */
  EClass getprocedure_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_parameter_section#getProcedure_heading <em>Procedure heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure heading</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_parameter_section#getProcedure_heading()
   * @see #getprocedure_parameter_section()
   * @generated
   */
  EReference getprocedure_parameter_section_Procedure_heading();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_parameter_section <em>variable parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.variable_parameter_section
   * @generated
   */
  EClass getvariable_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_parameter_section#getIdentifier_list <em>Identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.variable_parameter_section#getIdentifier_list()
   * @see #getvariable_parameter_section()
   * @generated
   */
  EReference getvariable_parameter_section_Identifier_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_parameter_section#getParameter_type <em>Parameter type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter type</em>'.
   * @see org.xtext.example.pascal.pascal.variable_parameter_section#getParameter_type()
   * @see #getvariable_parameter_section()
   * @generated
   */
  EReference getvariable_parameter_section_Parameter_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.value_parameter_section <em>value parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>value parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.value_parameter_section
   * @generated
   */
  EClass getvalue_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.value_parameter_section#getIdentifier_list <em>Identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.value_parameter_section#getIdentifier_list()
   * @see #getvalue_parameter_section()
   * @generated
   */
  EReference getvalue_parameter_section_Identifier_list();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.value_parameter_section#getParameter_type <em>Parameter type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter type</em>'.
   * @see org.xtext.example.pascal.pascal.value_parameter_section#getParameter_type()
   * @see #getvalue_parameter_section()
   * @generated
   */
  EReference getvalue_parameter_section_Parameter_type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.parameter_type <em>parameter type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>parameter type</em>'.
   * @see org.xtext.example.pascal.pascal.parameter_type
   * @generated
   */
  EClass getparameter_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.parameter_type#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.parameter_type#getType_identifier()
   * @see #getparameter_type()
   * @generated
   */
  EReference getparameter_type_Type_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.parameter_type#getConformant_array_schema <em>Conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.parameter_type#getConformant_array_schema()
   * @see #getparameter_type()
   * @generated
   */
  EReference getparameter_type_Conformant_array_schema();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.conformant_array_schema <em>conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.conformant_array_schema
   * @generated
   */
  EClass getconformant_array_schema();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.conformant_array_schema#getPacked_conformant_array_schema <em>Packed conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Packed conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.conformant_array_schema#getPacked_conformant_array_schema()
   * @see #getconformant_array_schema()
   * @generated
   */
  EReference getconformant_array_schema_Packed_conformant_array_schema();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.conformant_array_schema#getUnpacked_conformant_array_schema <em>Unpacked conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unpacked conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.conformant_array_schema#getUnpacked_conformant_array_schema()
   * @see #getconformant_array_schema()
   * @generated
   */
  EReference getconformant_array_schema_Unpacked_conformant_array_schema();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.unpacked_conformant_array_schema <em>unpacked conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unpacked conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_conformant_array_schema
   * @generated
   */
  EClass getunpacked_conformant_array_schema();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.unpacked_conformant_array_schema#getBound_specification <em>Bound specification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Bound specification</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_conformant_array_schema#getBound_specification()
   * @see #getunpacked_conformant_array_schema()
   * @generated
   */
  EReference getunpacked_conformant_array_schema_Bound_specification();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_conformant_array_schema#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_conformant_array_schema#getType_identifier()
   * @see #getunpacked_conformant_array_schema()
   * @generated
   */
  EReference getunpacked_conformant_array_schema_Type_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_conformant_array_schema#getConformant_array_schema <em>Conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_conformant_array_schema#getConformant_array_schema()
   * @see #getunpacked_conformant_array_schema()
   * @generated
   */
  EReference getunpacked_conformant_array_schema_Conformant_array_schema();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.bound_specification <em>bound specification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>bound specification</em>'.
   * @see org.xtext.example.pascal.pascal.bound_specification
   * @generated
   */
  EClass getbound_specification();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.bound_specification#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.pascal.pascal.bound_specification#getIdentifier()
   * @see #getbound_specification()
   * @generated
   */
  EReference getbound_specification_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.bound_specification#getIdentifier2 <em>Identifier2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier2</em>'.
   * @see org.xtext.example.pascal.pascal.bound_specification#getIdentifier2()
   * @see #getbound_specification()
   * @generated
   */
  EReference getbound_specification_Identifier2();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.bound_specification#getOrdinal_type_identifier <em>Ordinal type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ordinal type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.bound_specification#getOrdinal_type_identifier()
   * @see #getbound_specification()
   * @generated
   */
  EReference getbound_specification_Ordinal_type_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.ordinal_type_identifier <em>ordinal type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ordinal type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.ordinal_type_identifier
   * @generated
   */
  EClass getordinal_type_identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.ordinal_type_identifier#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.ordinal_type_identifier#getType_identifier()
   * @see #getordinal_type_identifier()
   * @generated
   */
  EReference getordinal_type_identifier_Type_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.packed_conformant_array_schema <em>packed conformant array schema</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>packed conformant array schema</em>'.
   * @see org.xtext.example.pascal.pascal.packed_conformant_array_schema
   * @generated
   */
  EClass getpacked_conformant_array_schema();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.packed_conformant_array_schema#getBound_specification <em>Bound specification</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bound specification</em>'.
   * @see org.xtext.example.pascal.pascal.packed_conformant_array_schema#getBound_specification()
   * @see #getpacked_conformant_array_schema()
   * @generated
   */
  EReference getpacked_conformant_array_schema_Bound_specification();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.packed_conformant_array_schema#getType_identifier <em>Type identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type identifier</em>'.
   * @see org.xtext.example.pascal.pascal.packed_conformant_array_schema#getType_identifier()
   * @see #getpacked_conformant_array_schema()
   * @generated
   */
  EReference getpacked_conformant_array_schema_Type_identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.output_list <em>output list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>output list</em>'.
   * @see org.xtext.example.pascal.pascal.output_list
   * @generated
   */
  EClass getoutput_list();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.output_value <em>output value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>output value</em>'.
   * @see org.xtext.example.pascal.pascal.output_value
   * @generated
   */
  EClass getoutput_value();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.output_value#getOutput_value <em>Output value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Output value</em>'.
   * @see org.xtext.example.pascal.pascal.output_value#getOutput_value()
   * @see #getoutput_value()
   * @generated
   */
  EReference getoutput_value_Output_value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PascalFactory getPascalFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.BeginImpl <em>Begin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.BeginImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getBegin()
     * @generated
     */
    EClass BEGIN = eINSTANCE.getBegin();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BEGIN__ELEMENTS = eINSTANCE.getBegin_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.programImpl <em>program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.programImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getprogram();

    /**
     * The meta object literal for the '<em><b>Program heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__PROGRAM_HEADING = eINSTANCE.getprogram_Program_heading();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__BLOCK = eINSTANCE.getprogram_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.program_headingImpl <em>program heading</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.program_headingImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram_heading()
     * @generated
     */
    EClass PROGRAM_HEADING = eINSTANCE.getprogram_heading();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRAM_HEADING__IDENTIFIER = eINSTANCE.getprogram_heading_Identifier();

    /**
     * The meta object literal for the '<em><b>Identifier list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM_HEADING__IDENTIFIER_LIST = eINSTANCE.getprogram_heading_Identifier_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.identifier_listImpl <em>identifier list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.identifier_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getidentifier_list()
     * @generated
     */
    EClass IDENTIFIER_LIST = eINSTANCE.getidentifier_list();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIER_LIST__IDENTIFIER = eINSTANCE.getidentifier_list_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_blockImpl <em>procedure block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_blockImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_block()
     * @generated
     */
    EClass PROCEDURE_BLOCK = eINSTANCE.getprocedure_block();

    /**
     * The meta object literal for the '<em><b>Declaration part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_BLOCK__DECLARATION_PART = eINSTANCE.getprocedure_block_Declaration_part();

    /**
     * The meta object literal for the '<em><b>Statement part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_BLOCK__STATEMENT_PART = eINSTANCE.getprocedure_block_Statement_part();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_blockImpl <em>function block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_blockImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_block()
     * @generated
     */
    EClass FUNCTION_BLOCK = eINSTANCE.getfunction_block();

    /**
     * The meta object literal for the '<em><b>Declaration part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_BLOCK__DECLARATION_PART = eINSTANCE.getfunction_block_Declaration_part();

    /**
     * The meta object literal for the '<em><b>Statement part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_BLOCK__STATEMENT_PART = eINSTANCE.getfunction_block_Statement_part();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.blockImpl <em>block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.blockImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getblock()
     * @generated
     */
    EClass BLOCK = eINSTANCE.getblock();

    /**
     * The meta object literal for the '<em><b>Declaration part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__DECLARATION_PART = eINSTANCE.getblock_Declaration_part();

    /**
     * The meta object literal for the '<em><b>Statement part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__STATEMENT_PART = eINSTANCE.getblock_Statement_part();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.statement_partImpl <em>statement part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.statement_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_part()
     * @generated
     */
    EClass STATEMENT_PART = eINSTANCE.getstatement_part();

    /**
     * The meta object literal for the '<em><b>Statement sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_PART__STATEMENT_SEQUENCE = eINSTANCE.getstatement_part_Statement_sequence();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.statement_sequenceImpl <em>statement sequence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.statement_sequenceImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_sequence()
     * @generated
     */
    EClass STATEMENT_SEQUENCE = eINSTANCE.getstatement_sequence();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_SEQUENCE__STATEMENT = eINSTANCE.getstatement_sequence_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.statementImpl <em>statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getstatement();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__LABEL = eINSTANCE.getstatement_Label();

    /**
     * The meta object literal for the '<em><b>Simple statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__SIMPLE_STATEMENT = eINSTANCE.getstatement_Simple_statement();

    /**
     * The meta object literal for the '<em><b>Structured statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__STRUCTURED_STATEMENT = eINSTANCE.getstatement_Structured_statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.simple_statementImpl <em>simple statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.simple_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_statement()
     * @generated
     */
    EClass SIMPLE_STATEMENT = eINSTANCE.getsimple_statement();

    /**
     * The meta object literal for the '<em><b>Assignment statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__ASSIGNMENT_STATEMENT = eINSTANCE.getsimple_statement_Assignment_statement();

    /**
     * The meta object literal for the '<em><b>Procedure statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__PROCEDURE_STATEMENT = eINSTANCE.getsimple_statement_Procedure_statement();

    /**
     * The meta object literal for the '<em><b>Goto statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__GOTO_STATEMENT = eINSTANCE.getsimple_statement_Goto_statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.goto_statementImpl <em>goto statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.goto_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getgoto_statement()
     * @generated
     */
    EClass GOTO_STATEMENT = eINSTANCE.getgoto_statement();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GOTO_STATEMENT__LABEL = eINSTANCE.getgoto_statement_Label();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_statementImpl <em>procedure statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_statement()
     * @generated
     */
    EClass PROCEDURE_STATEMENT = eINSTANCE.getprocedure_statement();

    /**
     * The meta object literal for the '<em><b>Procedure identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_STATEMENT__PROCEDURE_IDENTIFIER = eINSTANCE.getprocedure_statement_Procedure_identifier();

    /**
     * The meta object literal for the '<em><b>Actual parameter list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_STATEMENT__ACTUAL_PARAMETER_LIST = eINSTANCE.getprocedure_statement_Actual_parameter_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.actual_parameter_listImpl <em>actual parameter list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.actual_parameter_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_parameter_list()
     * @generated
     */
    EClass ACTUAL_PARAMETER_LIST = eINSTANCE.getactual_parameter_list();

    /**
     * The meta object literal for the '<em><b>Actual parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER = eINSTANCE.getactual_parameter_list_Actual_parameter();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.actual_parameterImpl <em>actual parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.actual_parameterImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_parameter()
     * @generated
     */
    EClass ACTUAL_PARAMETER = eINSTANCE.getactual_parameter();

    /**
     * The meta object literal for the '<em><b>Actual value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER__ACTUAL_VALUE = eINSTANCE.getactual_parameter_Actual_value();

    /**
     * The meta object literal for the '<em><b>Actual variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER__ACTUAL_VARIABLE = eINSTANCE.getactual_parameter_Actual_variable();

    /**
     * The meta object literal for the '<em><b>Actual procedure</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER__ACTUAL_PROCEDURE = eINSTANCE.getactual_parameter_Actual_procedure();

    /**
     * The meta object literal for the '<em><b>Actual function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER__ACTUAL_FUNCTION = eINSTANCE.getactual_parameter_Actual_function();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.actual_functionImpl <em>actual function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.actual_functionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_function()
     * @generated
     */
    EClass ACTUAL_FUNCTION = eINSTANCE.getactual_function();

    /**
     * The meta object literal for the '<em><b>Function identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_FUNCTION__FUNCTION_IDENTIFIER = eINSTANCE.getactual_function_Function_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.actual_procedureImpl <em>actual procedure</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.actual_procedureImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_procedure()
     * @generated
     */
    EClass ACTUAL_PROCEDURE = eINSTANCE.getactual_procedure();

    /**
     * The meta object literal for the '<em><b>Procedure identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PROCEDURE__PROCEDURE_IDENTIFIER = eINSTANCE.getactual_procedure_Procedure_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.actual_variableImpl <em>actual variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.actual_variableImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_variable()
     * @generated
     */
    EClass ACTUAL_VARIABLE = eINSTANCE.getactual_variable();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_VARIABLE__VARIABLE = eINSTANCE.getactual_variable_Variable();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.actual_valueImpl <em>actual value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.actual_valueImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getactual_value()
     * @generated
     */
    EClass ACTUAL_VALUE = eINSTANCE.getactual_value();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_VALUE__EXPRESSION = eINSTANCE.getactual_value_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.identifierImpl <em>identifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.identifierImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getidentifier()
     * @generated
     */
    EClass IDENTIFIER = eINSTANCE.getidentifier();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIER__IDENTIFIER = eINSTANCE.getidentifier_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.assignment_statementImpl <em>assignment statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.assignment_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getassignment_statement()
     * @generated
     */
    EClass ASSIGNMENT_STATEMENT = eINSTANCE.getassignment_statement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__VARIABLE = eINSTANCE.getassignment_statement_Variable();

    /**
     * The meta object literal for the '<em><b>Function identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__FUNCTION_IDENTIFIER = eINSTANCE.getassignment_statement_Function_identifier();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__EXPRESSION = eINSTANCE.getassignment_statement_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.expressionImpl <em>expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.expressionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getexpression();

    /**
     * The meta object literal for the '<em><b>Simple expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__SIMPLE_EXPRESSION = eINSTANCE.getexpression_Simple_expression();

    /**
     * The meta object literal for the '<em><b>Relational operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__RELATIONAL_OPERATOR = eINSTANCE.getexpression_Relational_operator();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPRESSION = eINSTANCE.getexpression_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.simple_expressionImpl <em>simple expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.simple_expressionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_expression()
     * @generated
     */
    EClass SIMPLE_EXPRESSION = eINSTANCE.getsimple_expression();

    /**
     * The meta object literal for the '<em><b>Sign</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_EXPRESSION__SIGN = eINSTANCE.getsimple_expression_Sign();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_EXPRESSION__TERM = eINSTANCE.getsimple_expression_Term();

    /**
     * The meta object literal for the '<em><b>Addition operator</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_EXPRESSION__ADDITION_OPERATOR = eINSTANCE.getsimple_expression_Addition_operator();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.termImpl <em>term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.termImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getterm()
     * @generated
     */
    EClass TERM = eINSTANCE.getterm();

    /**
     * The meta object literal for the '<em><b>Factor</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__FACTOR = eINSTANCE.getterm_Factor();

    /**
     * The meta object literal for the '<em><b>Multiplication operator</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TERM__MULTIPLICATION_OPERATOR = eINSTANCE.getterm_Multiplication_operator();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.factorImpl <em>factor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.factorImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfactor()
     * @generated
     */
    EClass FACTOR = eINSTANCE.getfactor();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__VARIABLE = eINSTANCE.getfactor_Variable();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__NUMBER = eINSTANCE.getfactor_Number();

    /**
     * The meta object literal for the '<em><b>Strings</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__STRINGS = eINSTANCE.getfactor_Strings();

    /**
     * The meta object literal for the '<em><b>Set</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__SET = eINSTANCE.getfactor_Set();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__IDENTIFIER = eINSTANCE.getfactor_Identifier();

    /**
     * The meta object literal for the '<em><b>Function designator</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__FUNCTION_DESIGNATOR = eINSTANCE.getfactor_Function_designator();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__EXPRESSION = eINSTANCE.getfactor_Expression();

    /**
     * The meta object literal for the '<em><b>Factor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__FACTOR = eINSTANCE.getfactor_Factor();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_designatorImpl <em>function designator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_designatorImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_designator()
     * @generated
     */
    EClass FUNCTION_DESIGNATOR = eINSTANCE.getfunction_designator();

    /**
     * The meta object literal for the '<em><b>Function identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DESIGNATOR__FUNCTION_IDENTIFIER = eINSTANCE.getfunction_designator_Function_identifier();

    /**
     * The meta object literal for the '<em><b>Actual parameter list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DESIGNATOR__ACTUAL_PARAMETER_LIST = eINSTANCE.getfunction_designator_Actual_parameter_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.setImpl <em>set</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.setImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset()
     * @generated
     */
    EClass SET = eINSTANCE.getset();

    /**
     * The meta object literal for the '<em><b>Element list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET__ELEMENT_LIST = eINSTANCE.getset_Element_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.element_listImpl <em>element list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.element_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getelement_list()
     * @generated
     */
    EClass ELEMENT_LIST = eINSTANCE.getelement_list();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_LIST__EXPRESSION = eINSTANCE.getelement_list_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.stringsImpl <em>strings</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.stringsImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstrings()
     * @generated
     */
    EClass STRINGS = eINSTANCE.getstrings();

    /**
     * The meta object literal for the '<em><b>String character</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRINGS__STRING_CHARACTER = eINSTANCE.getstrings_String_character();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.string_characterImpl <em>string character</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.string_characterImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstring_character()
     * @generated
     */
    EClass STRING_CHARACTER = eINSTANCE.getstring_character();

    /**
     * The meta object literal for the '<em><b>Any character except quote</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE = eINSTANCE.getstring_character_Any_character_except_quote();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.any_character_except_quoteImpl <em>any character except quote</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.any_character_except_quoteImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getany_character_except_quote()
     * @generated
     */
    EClass ANY_CHARACTER_EXCEPT_QUOTE = eINSTANCE.getany_character_except_quote();

    /**
     * The meta object literal for the '<em><b>Procedure heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ANY_CHARACTER_EXCEPT_QUOTE__PROCEDURE_HEADING = eINSTANCE.getany_character_except_quote_Procedure_heading();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.numberImpl <em>number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.numberImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getnumber()
     * @generated
     */
    EClass NUMBER = eINSTANCE.getnumber();

    /**
     * The meta object literal for the '<em><b>Integer number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NUMBER__INTEGER_NUMBER = eINSTANCE.getnumber_Integer_number();

    /**
     * The meta object literal for the '<em><b>Real number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NUMBER__REAL_NUMBER = eINSTANCE.getnumber_Real_number();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.real_numberImpl <em>real number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.real_numberImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getreal_number()
     * @generated
     */
    EClass REAL_NUMBER = eINSTANCE.getreal_number();

    /**
     * The meta object literal for the '<em><b>Digit sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REAL_NUMBER__DIGIT_SEQUENCE = eINSTANCE.getreal_number_Digit_sequence();

    /**
     * The meta object literal for the '<em><b>Digit sequence2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REAL_NUMBER__DIGIT_SEQUENCE2 = eINSTANCE.getreal_number_Digit_sequence2();

    /**
     * The meta object literal for the '<em><b>Scale factor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REAL_NUMBER__SCALE_FACTOR = eINSTANCE.getreal_number_Scale_factor();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.scale_factorImpl <em>scale factor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.scale_factorImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getscale_factor()
     * @generated
     */
    EClass SCALE_FACTOR = eINSTANCE.getscale_factor();

    /**
     * The meta object literal for the '<em><b>Sign</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SCALE_FACTOR__SIGN = eINSTANCE.getscale_factor_Sign();

    /**
     * The meta object literal for the '<em><b>Digit sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SCALE_FACTOR__DIGIT_SEQUENCE = eINSTANCE.getscale_factor_Digit_sequence();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variableImpl <em>variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variableImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getvariable();

    /**
     * The meta object literal for the '<em><b>Entire variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__ENTIRE_VARIABLE = eINSTANCE.getvariable_Entire_variable();

    /**
     * The meta object literal for the '<em><b>Expression list</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__EXPRESSION_LIST = eINSTANCE.getvariable_Expression_list();

    /**
     * The meta object literal for the '<em><b>Field identifier</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__FIELD_IDENTIFIER = eINSTANCE.getvariable_Field_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.entire_variableImpl <em>entire variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.entire_variableImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getentire_variable()
     * @generated
     */
    EClass ENTIRE_VARIABLE = eINSTANCE.getentire_variable();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTIRE_VARIABLE__IDENTIFIER = eINSTANCE.getentire_variable_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.expression_listImpl <em>expression list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.expression_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression_list()
     * @generated
     */
    EClass EXPRESSION_LIST = eINSTANCE.getexpression_list();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_LIST__EXPRESSION = eINSTANCE.getexpression_list_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.labelImpl <em>label</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.labelImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel()
     * @generated
     */
    EClass LABEL = eINSTANCE.getlabel();

    /**
     * The meta object literal for the '<em><b>Integer number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL__INTEGER_NUMBER = eINSTANCE.getlabel_Integer_number();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.integer_numberImpl <em>integer number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.integer_numberImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getinteger_number()
     * @generated
     */
    EClass INTEGER_NUMBER = eINSTANCE.getinteger_number();

    /**
     * The meta object literal for the '<em><b>Digit sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INTEGER_NUMBER__DIGIT_SEQUENCE = eINSTANCE.getinteger_number_Digit_sequence();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.digit_sequenceImpl <em>digit sequence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.digit_sequenceImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getdigit_sequence()
     * @generated
     */
    EClass DIGIT_SEQUENCE = eINSTANCE.getdigit_sequence();

    /**
     * The meta object literal for the '<em><b>Sign</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DIGIT_SEQUENCE__SIGN = eINSTANCE.getdigit_sequence_Sign();

    /**
     * The meta object literal for the '<em><b>Unsigned digit sequence</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DIGIT_SEQUENCE__UNSIGNED_DIGIT_SEQUENCE = eINSTANCE.getdigit_sequence_Unsigned_digit_sequence();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.structured_statementImpl <em>structured statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.structured_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstructured_statement()
     * @generated
     */
    EClass STRUCTURED_STATEMENT = eINSTANCE.getstructured_statement();

    /**
     * The meta object literal for the '<em><b>Compound statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__COMPOUND_STATEMENT = eINSTANCE.getstructured_statement_Compound_statement();

    /**
     * The meta object literal for the '<em><b>Repetitive statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__REPETITIVE_STATEMENT = eINSTANCE.getstructured_statement_Repetitive_statement();

    /**
     * The meta object literal for the '<em><b>Conditional statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__CONDITIONAL_STATEMENT = eINSTANCE.getstructured_statement_Conditional_statement();

    /**
     * The meta object literal for the '<em><b>With statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__WITH_STATEMENT = eINSTANCE.getstructured_statement_With_statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.with_statementImpl <em>with statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.with_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getwith_statement()
     * @generated
     */
    EClass WITH_STATEMENT = eINSTANCE.getwith_statement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WITH_STATEMENT__VARIABLE = eINSTANCE.getwith_statement_Variable();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WITH_STATEMENT__STATEMENT = eINSTANCE.getwith_statement_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.conditional_statementImpl <em>conditional statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.conditional_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconditional_statement()
     * @generated
     */
    EClass CONDITIONAL_STATEMENT = eINSTANCE.getconditional_statement();

    /**
     * The meta object literal for the '<em><b>If statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_STATEMENT__IF_STATEMENT = eINSTANCE.getconditional_statement_If_statement();

    /**
     * The meta object literal for the '<em><b>Case statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONAL_STATEMENT__CASE_STATEMENT = eINSTANCE.getconditional_statement_Case_statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.case_statementImpl <em>case statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.case_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcase_statement()
     * @generated
     */
    EClass CASE_STATEMENT = eINSTANCE.getcase_statement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_STATEMENT__EXPRESSION = eINSTANCE.getcase_statement_Expression();

    /**
     * The meta object literal for the '<em><b>Case limb</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_STATEMENT__CASE_LIMB = eINSTANCE.getcase_statement_Case_limb();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.case_limbImpl <em>case limb</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.case_limbImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcase_limb()
     * @generated
     */
    EClass CASE_LIMB = eINSTANCE.getcase_limb();

    /**
     * The meta object literal for the '<em><b>Case label list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_LIMB__CASE_LABEL_LIST = eINSTANCE.getcase_limb_Case_label_list();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_LIMB__STATEMENT = eINSTANCE.getcase_limb_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.case_label_listImpl <em>case label list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.case_label_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcase_label_list()
     * @generated
     */
    EClass CASE_LABEL_LIST = eINSTANCE.getcase_label_list();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_LABEL_LIST__CONSTANT = eINSTANCE.getcase_label_list_Constant();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.if_statementImpl <em>if statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.if_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getif_statement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getif_statement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__EXPRESSION = eINSTANCE.getif_statement_Expression();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__STATEMENT = eINSTANCE.getif_statement_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.repetitive_statementImpl <em>repetitive statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.repetitive_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrepetitive_statement()
     * @generated
     */
    EClass REPETITIVE_STATEMENT = eINSTANCE.getrepetitive_statement();

    /**
     * The meta object literal for the '<em><b>While statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPETITIVE_STATEMENT__WHILE_STATEMENT = eINSTANCE.getrepetitive_statement_While_statement();

    /**
     * The meta object literal for the '<em><b>Repeat statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPETITIVE_STATEMENT__REPEAT_STATEMENT = eINSTANCE.getrepetitive_statement_Repeat_statement();

    /**
     * The meta object literal for the '<em><b>For statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPETITIVE_STATEMENT__FOR_STATEMENT = eINSTANCE.getrepetitive_statement_For_statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.for_statementImpl <em>for statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.for_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfor_statement()
     * @generated
     */
    EClass FOR_STATEMENT = eINSTANCE.getfor_statement();

    /**
     * The meta object literal for the '<em><b>Variable identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__VARIABLE_IDENTIFIER = eINSTANCE.getfor_statement_Variable_identifier();

    /**
     * The meta object literal for the '<em><b>Initial expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__INITIAL_EXPRESSION = eINSTANCE.getfor_statement_Initial_expression();

    /**
     * The meta object literal for the '<em><b>Final expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__FINAL_EXPRESSION = eINSTANCE.getfor_statement_Final_expression();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__STATEMENT = eINSTANCE.getfor_statement_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.final_expressionImpl <em>final expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.final_expressionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfinal_expression()
     * @generated
     */
    EClass FINAL_EXPRESSION = eINSTANCE.getfinal_expression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FINAL_EXPRESSION__EXPRESSION = eINSTANCE.getfinal_expression_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.initial_expressionImpl <em>initial expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.initial_expressionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getinitial_expression()
     * @generated
     */
    EClass INITIAL_EXPRESSION = eINSTANCE.getinitial_expression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INITIAL_EXPRESSION__EXPRESSION = eINSTANCE.getinitial_expression_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.repeat_statementImpl <em>repeat statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.repeat_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrepeat_statement()
     * @generated
     */
    EClass REPEAT_STATEMENT = eINSTANCE.getrepeat_statement();

    /**
     * The meta object literal for the '<em><b>Statement sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPEAT_STATEMENT__STATEMENT_SEQUENCE = eINSTANCE.getrepeat_statement_Statement_sequence();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPEAT_STATEMENT__EXPRESSION = eINSTANCE.getrepeat_statement_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.while_statementImpl <em>while statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.while_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getwhile_statement()
     * @generated
     */
    EClass WHILE_STATEMENT = eINSTANCE.getwhile_statement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__EXPRESSION = eINSTANCE.getwhile_statement_Expression();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__STATEMENT = eINSTANCE.getwhile_statement_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.compound_statementImpl <em>compound statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.compound_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcompound_statement()
     * @generated
     */
    EClass COMPOUND_STATEMENT = eINSTANCE.getcompound_statement();

    /**
     * The meta object literal for the '<em><b>Statement sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOUND_STATEMENT__STATEMENT_SEQUENCE = eINSTANCE.getcompound_statement_Statement_sequence();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.declaration_partImpl <em>declaration part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.declaration_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getdeclaration_part()
     * @generated
     */
    EClass DECLARATION_PART = eINSTANCE.getdeclaration_part();

    /**
     * The meta object literal for the '<em><b>Label declaration part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__LABEL_DECLARATION_PART = eINSTANCE.getdeclaration_part_Label_declaration_part();

    /**
     * The meta object literal for the '<em><b>Constant definition part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__CONSTANT_DEFINITION_PART = eINSTANCE.getdeclaration_part_Constant_definition_part();

    /**
     * The meta object literal for the '<em><b>Type definition part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__TYPE_DEFINITION_PART = eINSTANCE.getdeclaration_part_Type_definition_part();

    /**
     * The meta object literal for the '<em><b>Variable declaration part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__VARIABLE_DECLARATION_PART = eINSTANCE.getdeclaration_part_Variable_declaration_part();

    /**
     * The meta object literal for the '<em><b>Procedure heading</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__PROCEDURE_HEADING = eINSTANCE.getdeclaration_part_Procedure_heading();

    /**
     * The meta object literal for the '<em><b>Procedure body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__PROCEDURE_BODY = eINSTANCE.getdeclaration_part_Procedure_body();

    /**
     * The meta object literal for the '<em><b>Directive</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__DIRECTIVE = eINSTANCE.getdeclaration_part_Directive();

    /**
     * The meta object literal for the '<em><b>Procedure identification</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__PROCEDURE_IDENTIFICATION = eINSTANCE.getdeclaration_part_Procedure_identification();

    /**
     * The meta object literal for the '<em><b>Function heading</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__FUNCTION_HEADING = eINSTANCE.getdeclaration_part_Function_heading();

    /**
     * The meta object literal for the '<em><b>Function body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__FUNCTION_BODY = eINSTANCE.getdeclaration_part_Function_body();

    /**
     * The meta object literal for the '<em><b>Function identification</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_PART__FUNCTION_IDENTIFICATION = eINSTANCE.getdeclaration_part_Function_identification();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.label_declaration_partImpl <em>label declaration part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.label_declaration_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel_declaration_part()
     * @generated
     */
    EClass LABEL_DECLARATION_PART = eINSTANCE.getlabel_declaration_part();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL_DECLARATION_PART__LABEL = eINSTANCE.getlabel_declaration_part_Label();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.constant_definition_partImpl <em>constant definition part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.constant_definition_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition_part()
     * @generated
     */
    EClass CONSTANT_DEFINITION_PART = eINSTANCE.getconstant_definition_part();

    /**
     * The meta object literal for the '<em><b>Constant definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION_PART__CONSTANT_DEFINITION = eINSTANCE.getconstant_definition_part_Constant_definition();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.constant_definitionImpl <em>constant definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.constant_definitionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition()
     * @generated
     */
    EClass CONSTANT_DEFINITION = eINSTANCE.getconstant_definition();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION__IDENTIFIER = eINSTANCE.getconstant_definition_Identifier();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION__CONSTANT = eINSTANCE.getconstant_definition_Constant();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.constantImpl <em>constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.constantImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getconstant();

    /**
     * The meta object literal for the '<em><b>Sign</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__SIGN = eINSTANCE.getconstant_Sign();

    /**
     * The meta object literal for the '<em><b>Constant identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__CONSTANT_IDENTIFIER = eINSTANCE.getconstant_Constant_identifier();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__NUMBER = eINSTANCE.getconstant_Number();

    /**
     * The meta object literal for the '<em><b>Strings</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__STRINGS = eINSTANCE.getconstant_Strings();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.type_definition_partImpl <em>type definition part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.type_definition_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition_part()
     * @generated
     */
    EClass TYPE_DEFINITION_PART = eINSTANCE.gettype_definition_part();

    /**
     * The meta object literal for the '<em><b>Type definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION_PART__TYPE_DEFINITION = eINSTANCE.gettype_definition_part_Type_definition();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.type_definitionImpl <em>type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.type_definitionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition()
     * @generated
     */
    EClass TYPE_DEFINITION = eINSTANCE.gettype_definition();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION__IDENTIFIER = eINSTANCE.gettype_definition_Identifier();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION__TYPE = eINSTANCE.gettype_definition_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.typeImpl <em>type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype()
     * @generated
     */
    EClass TYPE = eINSTANCE.gettype();

    /**
     * The meta object literal for the '<em><b>Simple type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__SIMPLE_TYPE = eINSTANCE.gettype_Simple_type();

    /**
     * The meta object literal for the '<em><b>Structured type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__STRUCTURED_TYPE = eINSTANCE.gettype_Structured_type();

    /**
     * The meta object literal for the '<em><b>Pointer type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__POINTER_TYPE = eINSTANCE.gettype_Pointer_type();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__TYPE_IDENTIFIER = eINSTANCE.gettype_Type_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.type_identifierImpl <em>type identifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.type_identifierImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_identifier()
     * @generated
     */
    EClass TYPE_IDENTIFIER = eINSTANCE.gettype_identifier();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_IDENTIFIER__IDENTIFIER = eINSTANCE.gettype_identifier_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.pointer_typeImpl <em>pointer type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.pointer_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpointer_type()
     * @generated
     */
    EClass POINTER_TYPE = eINSTANCE.getpointer_type();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTER_TYPE__TYPE_IDENTIFIER = eINSTANCE.getpointer_type_Type_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.structured_typeImpl <em>structured type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.structured_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstructured_type()
     * @generated
     */
    EClass STRUCTURED_TYPE = eINSTANCE.getstructured_type();

    /**
     * The meta object literal for the '<em><b>Unpacked structured type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE = eINSTANCE.getstructured_type_Unpacked_structured_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl <em>unpacked structured type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getunpacked_structured_type()
     * @generated
     */
    EClass UNPACKED_STRUCTURED_TYPE = eINSTANCE.getunpacked_structured_type();

    /**
     * The meta object literal for the '<em><b>Array type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE = eINSTANCE.getunpacked_structured_type_Array_type();

    /**
     * The meta object literal for the '<em><b>Record type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_STRUCTURED_TYPE__RECORD_TYPE = eINSTANCE.getunpacked_structured_type_Record_type();

    /**
     * The meta object literal for the '<em><b>Set type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_STRUCTURED_TYPE__SET_TYPE = eINSTANCE.getunpacked_structured_type_Set_type();

    /**
     * The meta object literal for the '<em><b>File type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_STRUCTURED_TYPE__FILE_TYPE = eINSTANCE.getunpacked_structured_type_File_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.file_typeImpl <em>file type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.file_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfile_type()
     * @generated
     */
    EClass FILE_TYPE = eINSTANCE.getfile_type();

    /**
     * The meta object literal for the '<em><b>File component type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FILE_TYPE__FILE_COMPONENT_TYPE = eINSTANCE.getfile_type_File_component_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.file_component_typeImpl <em>file component type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.file_component_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfile_component_type()
     * @generated
     */
    EClass FILE_COMPONENT_TYPE = eINSTANCE.getfile_component_type();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FILE_COMPONENT_TYPE__TYPE = eINSTANCE.getfile_component_type_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.set_typeImpl <em>set type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.set_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset_type()
     * @generated
     */
    EClass SET_TYPE = eINSTANCE.getset_type();

    /**
     * The meta object literal for the '<em><b>Base type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_TYPE__BASE_TYPE = eINSTANCE.getset_type_Base_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.base_typeImpl <em>base type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.base_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getbase_type()
     * @generated
     */
    EClass BASE_TYPE = eINSTANCE.getbase_type();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASE_TYPE__TYPE = eINSTANCE.getbase_type_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.record_typeImpl <em>record type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.record_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrecord_type()
     * @generated
     */
    EClass RECORD_TYPE = eINSTANCE.getrecord_type();

    /**
     * The meta object literal for the '<em><b>Field list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_TYPE__FIELD_LIST = eINSTANCE.getrecord_type_Field_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.field_listImpl <em>field list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.field_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfield_list()
     * @generated
     */
    EClass FIELD_LIST = eINSTANCE.getfield_list();

    /**
     * The meta object literal for the '<em><b>Fixed part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_LIST__FIXED_PART = eINSTANCE.getfield_list_Fixed_part();

    /**
     * The meta object literal for the '<em><b>Variant part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_LIST__VARIANT_PART = eINSTANCE.getfield_list_Variant_part();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.fixed_partImpl <em>fixed part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.fixed_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfixed_part()
     * @generated
     */
    EClass FIXED_PART = eINSTANCE.getfixed_part();

    /**
     * The meta object literal for the '<em><b>Record section</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIXED_PART__RECORD_SECTION = eINSTANCE.getfixed_part_Record_section();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.record_sectionImpl <em>record section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.record_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getrecord_section()
     * @generated
     */
    EClass RECORD_SECTION = eINSTANCE.getrecord_section();

    /**
     * The meta object literal for the '<em><b>Identifier list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_SECTION__IDENTIFIER_LIST = eINSTANCE.getrecord_section_Identifier_list();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_SECTION__TYPE = eINSTANCE.getrecord_section_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variant_partImpl <em>variant part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variant_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariant_part()
     * @generated
     */
    EClass VARIANT_PART = eINSTANCE.getvariant_part();

    /**
     * The meta object literal for the '<em><b>Tag field</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT_PART__TAG_FIELD = eINSTANCE.getvariant_part_Tag_field();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT_PART__TYPE_IDENTIFIER = eINSTANCE.getvariant_part_Type_identifier();

    /**
     * The meta object literal for the '<em><b>Variant</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT_PART__VARIANT = eINSTANCE.getvariant_part_Variant();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variantImpl <em>variant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variantImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariant()
     * @generated
     */
    EClass VARIANT = eINSTANCE.getvariant();

    /**
     * The meta object literal for the '<em><b>Case label list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT__CASE_LABEL_LIST = eINSTANCE.getvariant_Case_label_list();

    /**
     * The meta object literal for the '<em><b>Field list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT__FIELD_LIST = eINSTANCE.getvariant_Field_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.tag_fieldImpl <em>tag field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.tag_fieldImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettag_field()
     * @generated
     */
    EClass TAG_FIELD = eINSTANCE.gettag_field();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TAG_FIELD__IDENTIFIER = eINSTANCE.gettag_field_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.array_typeImpl <em>array type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.array_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getarray_type()
     * @generated
     */
    EClass ARRAY_TYPE = eINSTANCE.getarray_type();

    /**
     * The meta object literal for the '<em><b>Index type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_TYPE__INDEX_TYPE = eINSTANCE.getarray_type_Index_type();

    /**
     * The meta object literal for the '<em><b>Element type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_TYPE__ELEMENT_TYPE = eINSTANCE.getarray_type_Element_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.element_typeImpl <em>element type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.element_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getelement_type()
     * @generated
     */
    EClass ELEMENT_TYPE = eINSTANCE.getelement_type();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ELEMENT_TYPE__TYPE = eINSTANCE.getelement_type_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.index_typeImpl <em>index type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.index_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getindex_type()
     * @generated
     */
    EClass INDEX_TYPE = eINSTANCE.getindex_type();

    /**
     * The meta object literal for the '<em><b>Simple type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_TYPE__SIMPLE_TYPE = eINSTANCE.getindex_type_Simple_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.simple_typeImpl <em>simple type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.simple_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_type()
     * @generated
     */
    EClass SIMPLE_TYPE = eINSTANCE.getsimple_type();

    /**
     * The meta object literal for the '<em><b>Subrange type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPE__SUBRANGE_TYPE = eINSTANCE.getsimple_type_Subrange_type();

    /**
     * The meta object literal for the '<em><b>Enumerated type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPE__ENUMERATED_TYPE = eINSTANCE.getsimple_type_Enumerated_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.enumerated_typeImpl <em>enumerated type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.enumerated_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getenumerated_type()
     * @generated
     */
    EClass ENUMERATED_TYPE = eINSTANCE.getenumerated_type();

    /**
     * The meta object literal for the '<em><b>Identifier list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUMERATED_TYPE__IDENTIFIER_LIST = eINSTANCE.getenumerated_type_Identifier_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.subrange_typeImpl <em>subrange type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.subrange_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsubrange_type()
     * @generated
     */
    EClass SUBRANGE_TYPE = eINSTANCE.getsubrange_type();

    /**
     * The meta object literal for the '<em><b>Lower bound</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__LOWER_BOUND = eINSTANCE.getsubrange_type_Lower_bound();

    /**
     * The meta object literal for the '<em><b>Upper bound</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__UPPER_BOUND = eINSTANCE.getsubrange_type_Upper_bound();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.lower_boundImpl <em>lower bound</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.lower_boundImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlower_bound()
     * @generated
     */
    EClass LOWER_BOUND = eINSTANCE.getlower_bound();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOWER_BOUND__CONSTANT = eINSTANCE.getlower_bound_Constant();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.upper_boundImpl <em>upper bound</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.upper_boundImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getupper_bound()
     * @generated
     */
    EClass UPPER_BOUND = eINSTANCE.getupper_bound();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UPPER_BOUND__CONSTANT = eINSTANCE.getupper_bound_Constant();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl <em>variable declaration part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_declaration_part()
     * @generated
     */
    EClass VARIABLE_DECLARATION_PART = eINSTANCE.getvariable_declaration_part();

    /**
     * The meta object literal for the '<em><b>Variable declaration</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION_PART__VARIABLE_DECLARATION = eINSTANCE.getvariable_declaration_part_Variable_declaration();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_declarationImpl <em>variable declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_declarationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_declaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getvariable_declaration();

    /**
     * The meta object literal for the '<em><b>Identifier list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__IDENTIFIER_LIST = eINSTANCE.getvariable_declaration_Identifier_list();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__TYPE = eINSTANCE.getvariable_declaration_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_identificationImpl <em>function identification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_identificationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_identification()
     * @generated
     */
    EClass FUNCTION_IDENTIFICATION = eINSTANCE.getfunction_identification();

    /**
     * The meta object literal for the '<em><b>Function identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_IDENTIFICATION__FUNCTION_IDENTIFIER = eINSTANCE.getfunction_identification_Function_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_bodyImpl <em>function body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_bodyImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_body()
     * @generated
     */
    EClass FUNCTION_BODY = eINSTANCE.getfunction_body();

    /**
     * The meta object literal for the '<em><b>Function block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_BODY__FUNCTION_BLOCK = eINSTANCE.getfunction_body_Function_block();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_identificationImpl <em>procedure identification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_identificationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_identification()
     * @generated
     */
    EClass PROCEDURE_IDENTIFICATION = eINSTANCE.getprocedure_identification();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_IDENTIFICATION__IDENTIFIER = eINSTANCE.getprocedure_identification_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.directiveImpl <em>directive</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.directiveImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getdirective()
     * @generated
     */
    EClass DIRECTIVE = eINSTANCE.getdirective();

    /**
     * The meta object literal for the '<em><b>Compiler defined directives</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIRECTIVE__COMPILER_DEFINED_DIRECTIVES = eINSTANCE.getdirective_Compiler_defined_directives();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.compiler_defined_directivesImpl <em>compiler defined directives</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.compiler_defined_directivesImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getcompiler_defined_directives()
     * @generated
     */
    EClass COMPILER_DEFINED_DIRECTIVES = eINSTANCE.getcompiler_defined_directives();

    /**
     * The meta object literal for the '<em><b>Procedure heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPILER_DEFINED_DIRECTIVES__PROCEDURE_HEADING = eINSTANCE.getcompiler_defined_directives_Procedure_heading();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_bodyImpl <em>procedure body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_bodyImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_body()
     * @generated
     */
    EClass PROCEDURE_BODY = eINSTANCE.getprocedure_body();

    /**
     * The meta object literal for the '<em><b>Procedure block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_BODY__PROCEDURE_BLOCK = eINSTANCE.getprocedure_body_Procedure_block();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_headingImpl <em>procedure heading</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_headingImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_heading()
     * @generated
     */
    EClass PROCEDURE_HEADING = eINSTANCE.getprocedure_heading();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_HEADING__IDENTIFIER = eINSTANCE.getprocedure_heading_Identifier();

    /**
     * The meta object literal for the '<em><b>Formal parameter list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_HEADING__FORMAL_PARAMETER_LIST = eINSTANCE.getprocedure_heading_Formal_parameter_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl <em>formal parameter list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_list()
     * @generated
     */
    EClass FORMAL_PARAMETER_LIST = eINSTANCE.getformal_parameter_list();

    /**
     * The meta object literal for the '<em><b>Formal parameter section</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION = eINSTANCE.getformal_parameter_list_Formal_parameter_section();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl <em>formal parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_section()
     * @generated
     */
    EClass FORMAL_PARAMETER_SECTION = eINSTANCE.getformal_parameter_section();

    /**
     * The meta object literal for the '<em><b>Value parameter section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__VALUE_PARAMETER_SECTION = eINSTANCE.getformal_parameter_section_Value_parameter_section();

    /**
     * The meta object literal for the '<em><b>Variable parameter section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__VARIABLE_PARAMETER_SECTION = eINSTANCE.getformal_parameter_section_Variable_parameter_section();

    /**
     * The meta object literal for the '<em><b>Procedure parameter section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__PROCEDURE_PARAMETER_SECTION = eINSTANCE.getformal_parameter_section_Procedure_parameter_section();

    /**
     * The meta object literal for the '<em><b>Function parameter section</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__FUNCTION_PARAMETER_SECTION = eINSTANCE.getformal_parameter_section_Function_parameter_section();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_parameter_sectionImpl <em>function parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_parameter_section()
     * @generated
     */
    EClass FUNCTION_PARAMETER_SECTION = eINSTANCE.getfunction_parameter_section();

    /**
     * The meta object literal for the '<em><b>Function heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_PARAMETER_SECTION__FUNCTION_HEADING = eINSTANCE.getfunction_parameter_section_Function_heading();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_headingImpl <em>function heading</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_headingImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_heading()
     * @generated
     */
    EClass FUNCTION_HEADING = eINSTANCE.getfunction_heading();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_HEADING__IDENTIFIER = eINSTANCE.getfunction_heading_Identifier();

    /**
     * The meta object literal for the '<em><b>Formal parameter list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_HEADING__FORMAL_PARAMETER_LIST = eINSTANCE.getfunction_heading_Formal_parameter_list();

    /**
     * The meta object literal for the '<em><b>Result type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_HEADING__RESULT_TYPE = eINSTANCE.getfunction_heading_Result_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.result_typeImpl <em>result type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.result_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getresult_type()
     * @generated
     */
    EClass RESULT_TYPE = eINSTANCE.getresult_type();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESULT_TYPE__TYPE_IDENTIFIER = eINSTANCE.getresult_type_Type_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_parameter_sectionImpl <em>procedure parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_parameter_section()
     * @generated
     */
    EClass PROCEDURE_PARAMETER_SECTION = eINSTANCE.getprocedure_parameter_section();

    /**
     * The meta object literal for the '<em><b>Procedure heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_PARAMETER_SECTION__PROCEDURE_HEADING = eINSTANCE.getprocedure_parameter_section_Procedure_heading();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl <em>variable parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_parameter_section()
     * @generated
     */
    EClass VARIABLE_PARAMETER_SECTION = eINSTANCE.getvariable_parameter_section();

    /**
     * The meta object literal for the '<em><b>Identifier list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_PARAMETER_SECTION__IDENTIFIER_LIST = eINSTANCE.getvariable_parameter_section_Identifier_list();

    /**
     * The meta object literal for the '<em><b>Parameter type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_PARAMETER_SECTION__PARAMETER_TYPE = eINSTANCE.getvariable_parameter_section_Parameter_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl <em>value parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvalue_parameter_section()
     * @generated
     */
    EClass VALUE_PARAMETER_SECTION = eINSTANCE.getvalue_parameter_section();

    /**
     * The meta object literal for the '<em><b>Identifier list</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE_PARAMETER_SECTION__IDENTIFIER_LIST = eINSTANCE.getvalue_parameter_section_Identifier_list();

    /**
     * The meta object literal for the '<em><b>Parameter type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE_PARAMETER_SECTION__PARAMETER_TYPE = eINSTANCE.getvalue_parameter_section_Parameter_type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.parameter_typeImpl <em>parameter type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.parameter_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getparameter_type()
     * @generated
     */
    EClass PARAMETER_TYPE = eINSTANCE.getparameter_type();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_TYPE__TYPE_IDENTIFIER = eINSTANCE.getparameter_type_Type_identifier();

    /**
     * The meta object literal for the '<em><b>Conformant array schema</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_TYPE__CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getparameter_type_Conformant_array_schema();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.conformant_array_schemaImpl <em>conformant array schema</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.conformant_array_schemaImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconformant_array_schema()
     * @generated
     */
    EClass CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getconformant_array_schema();

    /**
     * The meta object literal for the '<em><b>Packed conformant array schema</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getconformant_array_schema_Packed_conformant_array_schema();

    /**
     * The meta object literal for the '<em><b>Unpacked conformant array schema</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getconformant_array_schema_Unpacked_conformant_array_schema();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.unpacked_conformant_array_schemaImpl <em>unpacked conformant array schema</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.unpacked_conformant_array_schemaImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getunpacked_conformant_array_schema()
     * @generated
     */
    EClass UNPACKED_CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getunpacked_conformant_array_schema();

    /**
     * The meta object literal for the '<em><b>Bound specification</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_CONFORMANT_ARRAY_SCHEMA__BOUND_SPECIFICATION = eINSTANCE.getunpacked_conformant_array_schema_Bound_specification();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_CONFORMANT_ARRAY_SCHEMA__TYPE_IDENTIFIER = eINSTANCE.getunpacked_conformant_array_schema_Type_identifier();

    /**
     * The meta object literal for the '<em><b>Conformant array schema</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_CONFORMANT_ARRAY_SCHEMA__CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getunpacked_conformant_array_schema_Conformant_array_schema();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.bound_specificationImpl <em>bound specification</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.bound_specificationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getbound_specification()
     * @generated
     */
    EClass BOUND_SPECIFICATION = eINSTANCE.getbound_specification();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOUND_SPECIFICATION__IDENTIFIER = eINSTANCE.getbound_specification_Identifier();

    /**
     * The meta object literal for the '<em><b>Identifier2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOUND_SPECIFICATION__IDENTIFIER2 = eINSTANCE.getbound_specification_Identifier2();

    /**
     * The meta object literal for the '<em><b>Ordinal type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOUND_SPECIFICATION__ORDINAL_TYPE_IDENTIFIER = eINSTANCE.getbound_specification_Ordinal_type_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.ordinal_type_identifierImpl <em>ordinal type identifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.ordinal_type_identifierImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getordinal_type_identifier()
     * @generated
     */
    EClass ORDINAL_TYPE_IDENTIFIER = eINSTANCE.getordinal_type_identifier();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDINAL_TYPE_IDENTIFIER__TYPE_IDENTIFIER = eINSTANCE.getordinal_type_identifier_Type_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.packed_conformant_array_schemaImpl <em>packed conformant array schema</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.packed_conformant_array_schemaImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpacked_conformant_array_schema()
     * @generated
     */
    EClass PACKED_CONFORMANT_ARRAY_SCHEMA = eINSTANCE.getpacked_conformant_array_schema();

    /**
     * The meta object literal for the '<em><b>Bound specification</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKED_CONFORMANT_ARRAY_SCHEMA__BOUND_SPECIFICATION = eINSTANCE.getpacked_conformant_array_schema_Bound_specification();

    /**
     * The meta object literal for the '<em><b>Type identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PACKED_CONFORMANT_ARRAY_SCHEMA__TYPE_IDENTIFIER = eINSTANCE.getpacked_conformant_array_schema_Type_identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.output_listImpl <em>output list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.output_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getoutput_list()
     * @generated
     */
    EClass OUTPUT_LIST = eINSTANCE.getoutput_list();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.output_valueImpl <em>output value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.output_valueImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getoutput_value()
     * @generated
     */
    EClass OUTPUT_VALUE = eINSTANCE.getoutput_value();

    /**
     * The meta object literal for the '<em><b>Output value</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTPUT_VALUE__OUTPUT_VALUE = eINSTANCE.getoutput_value_Output_value();

  }

} //PascalPackage
