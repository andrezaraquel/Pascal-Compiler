/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.example.pascal.pascal.PascalPackage
 * @generated
 */
public interface PascalFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PascalFactory eINSTANCE = org.xtext.example.pascal.pascal.impl.PascalFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Begin</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Begin</em>'.
   * @generated
   */
  Begin createBegin();

  /**
   * Returns a new object of class '<em>program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>program</em>'.
   * @generated
   */
  program createprogram();

  /**
   * Returns a new object of class '<em>program heading</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>program heading</em>'.
   * @generated
   */
  program_heading createprogram_heading();

  /**
   * Returns a new object of class '<em>identifier list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier list</em>'.
   * @generated
   */
  identifier_list createidentifier_list();

  /**
   * Returns a new object of class '<em>procedure block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure block</em>'.
   * @generated
   */
  procedure_block createprocedure_block();

  /**
   * Returns a new object of class '<em>function block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function block</em>'.
   * @generated
   */
  function_block createfunction_block();

  /**
   * Returns a new object of class '<em>block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>block</em>'.
   * @generated
   */
  block createblock();

  /**
   * Returns a new object of class '<em>statement part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statement part</em>'.
   * @generated
   */
  statement_part createstatement_part();

  /**
   * Returns a new object of class '<em>statement sequence</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statement sequence</em>'.
   * @generated
   */
  statement_sequence createstatement_sequence();

  /**
   * Returns a new object of class '<em>statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>statement</em>'.
   * @generated
   */
  statement createstatement();

  /**
   * Returns a new object of class '<em>simple statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple statement</em>'.
   * @generated
   */
  simple_statement createsimple_statement();

  /**
   * Returns a new object of class '<em>goto statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>goto statement</em>'.
   * @generated
   */
  goto_statement creategoto_statement();

  /**
   * Returns a new object of class '<em>procedure statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure statement</em>'.
   * @generated
   */
  procedure_statement createprocedure_statement();

  /**
   * Returns a new object of class '<em>actual parameter list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual parameter list</em>'.
   * @generated
   */
  actual_parameter_list createactual_parameter_list();

  /**
   * Returns a new object of class '<em>actual parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual parameter</em>'.
   * @generated
   */
  actual_parameter createactual_parameter();

  /**
   * Returns a new object of class '<em>actual function</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual function</em>'.
   * @generated
   */
  actual_function createactual_function();

  /**
   * Returns a new object of class '<em>actual procedure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual procedure</em>'.
   * @generated
   */
  actual_procedure createactual_procedure();

  /**
   * Returns a new object of class '<em>actual variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual variable</em>'.
   * @generated
   */
  actual_variable createactual_variable();

  /**
   * Returns a new object of class '<em>actual value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>actual value</em>'.
   * @generated
   */
  actual_value createactual_value();

  /**
   * Returns a new object of class '<em>identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>identifier</em>'.
   * @generated
   */
  identifier createidentifier();

  /**
   * Returns a new object of class '<em>assignment statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>assignment statement</em>'.
   * @generated
   */
  assignment_statement createassignment_statement();

  /**
   * Returns a new object of class '<em>expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression</em>'.
   * @generated
   */
  expression createexpression();

  /**
   * Returns a new object of class '<em>simple expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple expression</em>'.
   * @generated
   */
  simple_expression createsimple_expression();

  /**
   * Returns a new object of class '<em>term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>term</em>'.
   * @generated
   */
  term createterm();

  /**
   * Returns a new object of class '<em>factor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>factor</em>'.
   * @generated
   */
  factor createfactor();

  /**
   * Returns a new object of class '<em>function designator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function designator</em>'.
   * @generated
   */
  function_designator createfunction_designator();

  /**
   * Returns a new object of class '<em>set</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>set</em>'.
   * @generated
   */
  set createset();

  /**
   * Returns a new object of class '<em>element list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>element list</em>'.
   * @generated
   */
  element_list createelement_list();

  /**
   * Returns a new object of class '<em>strings</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>strings</em>'.
   * @generated
   */
  strings createstrings();

  /**
   * Returns a new object of class '<em>string character</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>string character</em>'.
   * @generated
   */
  string_character createstring_character();

  /**
   * Returns a new object of class '<em>any character except quote</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>any character except quote</em>'.
   * @generated
   */
  any_character_except_quote createany_character_except_quote();

  /**
   * Returns a new object of class '<em>number</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>number</em>'.
   * @generated
   */
  number createnumber();

  /**
   * Returns a new object of class '<em>real number</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>real number</em>'.
   * @generated
   */
  real_number createreal_number();

  /**
   * Returns a new object of class '<em>scale factor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>scale factor</em>'.
   * @generated
   */
  scale_factor createscale_factor();

  /**
   * Returns a new object of class '<em>variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable</em>'.
   * @generated
   */
  variable createvariable();

  /**
   * Returns a new object of class '<em>entire variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>entire variable</em>'.
   * @generated
   */
  entire_variable createentire_variable();

  /**
   * Returns a new object of class '<em>expression list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>expression list</em>'.
   * @generated
   */
  expression_list createexpression_list();

  /**
   * Returns a new object of class '<em>label</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>label</em>'.
   * @generated
   */
  label createlabel();

  /**
   * Returns a new object of class '<em>integer number</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>integer number</em>'.
   * @generated
   */
  integer_number createinteger_number();

  /**
   * Returns a new object of class '<em>digit sequence</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>digit sequence</em>'.
   * @generated
   */
  digit_sequence createdigit_sequence();

  /**
   * Returns a new object of class '<em>structured statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>structured statement</em>'.
   * @generated
   */
  structured_statement createstructured_statement();

  /**
   * Returns a new object of class '<em>with statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>with statement</em>'.
   * @generated
   */
  with_statement createwith_statement();

  /**
   * Returns a new object of class '<em>conditional statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>conditional statement</em>'.
   * @generated
   */
  conditional_statement createconditional_statement();

  /**
   * Returns a new object of class '<em>case statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case statement</em>'.
   * @generated
   */
  case_statement createcase_statement();

  /**
   * Returns a new object of class '<em>case limb</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case limb</em>'.
   * @generated
   */
  case_limb createcase_limb();

  /**
   * Returns a new object of class '<em>case label list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>case label list</em>'.
   * @generated
   */
  case_label_list createcase_label_list();

  /**
   * Returns a new object of class '<em>if statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>if statement</em>'.
   * @generated
   */
  if_statement createif_statement();

  /**
   * Returns a new object of class '<em>repetitive statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>repetitive statement</em>'.
   * @generated
   */
  repetitive_statement createrepetitive_statement();

  /**
   * Returns a new object of class '<em>for statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>for statement</em>'.
   * @generated
   */
  for_statement createfor_statement();

  /**
   * Returns a new object of class '<em>final expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>final expression</em>'.
   * @generated
   */
  final_expression createfinal_expression();

  /**
   * Returns a new object of class '<em>initial expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>initial expression</em>'.
   * @generated
   */
  initial_expression createinitial_expression();

  /**
   * Returns a new object of class '<em>repeat statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>repeat statement</em>'.
   * @generated
   */
  repeat_statement createrepeat_statement();

  /**
   * Returns a new object of class '<em>while statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>while statement</em>'.
   * @generated
   */
  while_statement createwhile_statement();

  /**
   * Returns a new object of class '<em>compound statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>compound statement</em>'.
   * @generated
   */
  compound_statement createcompound_statement();

  /**
   * Returns a new object of class '<em>declaration part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>declaration part</em>'.
   * @generated
   */
  declaration_part createdeclaration_part();

  /**
   * Returns a new object of class '<em>label declaration part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>label declaration part</em>'.
   * @generated
   */
  label_declaration_part createlabel_declaration_part();

  /**
   * Returns a new object of class '<em>constant definition part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant definition part</em>'.
   * @generated
   */
  constant_definition_part createconstant_definition_part();

  /**
   * Returns a new object of class '<em>constant definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant definition</em>'.
   * @generated
   */
  constant_definition createconstant_definition();

  /**
   * Returns a new object of class '<em>constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>constant</em>'.
   * @generated
   */
  constant createconstant();

  /**
   * Returns a new object of class '<em>type definition part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type definition part</em>'.
   * @generated
   */
  type_definition_part createtype_definition_part();

  /**
   * Returns a new object of class '<em>type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type definition</em>'.
   * @generated
   */
  type_definition createtype_definition();

  /**
   * Returns a new object of class '<em>type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type</em>'.
   * @generated
   */
  type createtype();

  /**
   * Returns a new object of class '<em>type identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>type identifier</em>'.
   * @generated
   */
  type_identifier createtype_identifier();

  /**
   * Returns a new object of class '<em>pointer type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>pointer type</em>'.
   * @generated
   */
  pointer_type createpointer_type();

  /**
   * Returns a new object of class '<em>structured type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>structured type</em>'.
   * @generated
   */
  structured_type createstructured_type();

  /**
   * Returns a new object of class '<em>unpacked structured type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unpacked structured type</em>'.
   * @generated
   */
  unpacked_structured_type createunpacked_structured_type();

  /**
   * Returns a new object of class '<em>file type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>file type</em>'.
   * @generated
   */
  file_type createfile_type();

  /**
   * Returns a new object of class '<em>file component type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>file component type</em>'.
   * @generated
   */
  file_component_type createfile_component_type();

  /**
   * Returns a new object of class '<em>set type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>set type</em>'.
   * @generated
   */
  set_type createset_type();

  /**
   * Returns a new object of class '<em>base type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>base type</em>'.
   * @generated
   */
  base_type createbase_type();

  /**
   * Returns a new object of class '<em>record type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>record type</em>'.
   * @generated
   */
  record_type createrecord_type();

  /**
   * Returns a new object of class '<em>field list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>field list</em>'.
   * @generated
   */
  field_list createfield_list();

  /**
   * Returns a new object of class '<em>fixed part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fixed part</em>'.
   * @generated
   */
  fixed_part createfixed_part();

  /**
   * Returns a new object of class '<em>record section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>record section</em>'.
   * @generated
   */
  record_section createrecord_section();

  /**
   * Returns a new object of class '<em>variant part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variant part</em>'.
   * @generated
   */
  variant_part createvariant_part();

  /**
   * Returns a new object of class '<em>variant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variant</em>'.
   * @generated
   */
  variant createvariant();

  /**
   * Returns a new object of class '<em>tag field</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tag field</em>'.
   * @generated
   */
  tag_field createtag_field();

  /**
   * Returns a new object of class '<em>array type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>array type</em>'.
   * @generated
   */
  array_type createarray_type();

  /**
   * Returns a new object of class '<em>element type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>element type</em>'.
   * @generated
   */
  element_type createelement_type();

  /**
   * Returns a new object of class '<em>index type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>index type</em>'.
   * @generated
   */
  index_type createindex_type();

  /**
   * Returns a new object of class '<em>simple type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>simple type</em>'.
   * @generated
   */
  simple_type createsimple_type();

  /**
   * Returns a new object of class '<em>enumerated type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>enumerated type</em>'.
   * @generated
   */
  enumerated_type createenumerated_type();

  /**
   * Returns a new object of class '<em>subrange type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>subrange type</em>'.
   * @generated
   */
  subrange_type createsubrange_type();

  /**
   * Returns a new object of class '<em>lower bound</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>lower bound</em>'.
   * @generated
   */
  lower_bound createlower_bound();

  /**
   * Returns a new object of class '<em>upper bound</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>upper bound</em>'.
   * @generated
   */
  upper_bound createupper_bound();

  /**
   * Returns a new object of class '<em>variable declaration part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable declaration part</em>'.
   * @generated
   */
  variable_declaration_part createvariable_declaration_part();

  /**
   * Returns a new object of class '<em>variable declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable declaration</em>'.
   * @generated
   */
  variable_declaration createvariable_declaration();

  /**
   * Returns a new object of class '<em>function identification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function identification</em>'.
   * @generated
   */
  function_identification createfunction_identification();

  /**
   * Returns a new object of class '<em>function body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function body</em>'.
   * @generated
   */
  function_body createfunction_body();

  /**
   * Returns a new object of class '<em>procedure identification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure identification</em>'.
   * @generated
   */
  procedure_identification createprocedure_identification();

  /**
   * Returns a new object of class '<em>directive</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>directive</em>'.
   * @generated
   */
  directive createdirective();

  /**
   * Returns a new object of class '<em>compiler defined directives</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>compiler defined directives</em>'.
   * @generated
   */
  compiler_defined_directives createcompiler_defined_directives();

  /**
   * Returns a new object of class '<em>procedure body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure body</em>'.
   * @generated
   */
  procedure_body createprocedure_body();

  /**
   * Returns a new object of class '<em>procedure heading</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure heading</em>'.
   * @generated
   */
  procedure_heading createprocedure_heading();

  /**
   * Returns a new object of class '<em>formal parameter list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>formal parameter list</em>'.
   * @generated
   */
  formal_parameter_list createformal_parameter_list();

  /**
   * Returns a new object of class '<em>formal parameter section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>formal parameter section</em>'.
   * @generated
   */
  formal_parameter_section createformal_parameter_section();

  /**
   * Returns a new object of class '<em>function parameter section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function parameter section</em>'.
   * @generated
   */
  function_parameter_section createfunction_parameter_section();

  /**
   * Returns a new object of class '<em>function heading</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>function heading</em>'.
   * @generated
   */
  function_heading createfunction_heading();

  /**
   * Returns a new object of class '<em>result type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>result type</em>'.
   * @generated
   */
  result_type createresult_type();

  /**
   * Returns a new object of class '<em>procedure parameter section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>procedure parameter section</em>'.
   * @generated
   */
  procedure_parameter_section createprocedure_parameter_section();

  /**
   * Returns a new object of class '<em>variable parameter section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>variable parameter section</em>'.
   * @generated
   */
  variable_parameter_section createvariable_parameter_section();

  /**
   * Returns a new object of class '<em>value parameter section</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>value parameter section</em>'.
   * @generated
   */
  value_parameter_section createvalue_parameter_section();

  /**
   * Returns a new object of class '<em>parameter type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>parameter type</em>'.
   * @generated
   */
  parameter_type createparameter_type();

  /**
   * Returns a new object of class '<em>conformant array schema</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>conformant array schema</em>'.
   * @generated
   */
  conformant_array_schema createconformant_array_schema();

  /**
   * Returns a new object of class '<em>unpacked conformant array schema</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>unpacked conformant array schema</em>'.
   * @generated
   */
  unpacked_conformant_array_schema createunpacked_conformant_array_schema();

  /**
   * Returns a new object of class '<em>bound specification</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>bound specification</em>'.
   * @generated
   */
  bound_specification createbound_specification();

  /**
   * Returns a new object of class '<em>ordinal type identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ordinal type identifier</em>'.
   * @generated
   */
  ordinal_type_identifier createordinal_type_identifier();

  /**
   * Returns a new object of class '<em>packed conformant array schema</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>packed conformant array schema</em>'.
   * @generated
   */
  packed_conformant_array_schema createpacked_conformant_array_schema();

  /**
   * Returns a new object of class '<em>output list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>output list</em>'.
   * @generated
   */
  output_list createoutput_list();

  /**
   * Returns a new object of class '<em>output value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>output value</em>'.
   * @generated
   */
  output_value createoutput_value();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  PascalPackage getPascalPackage();

} //PascalFactory
