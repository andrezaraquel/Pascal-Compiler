/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>declaration part</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getLabel_declaration_part <em>Label declaration part</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getConstant_definition_part <em>Constant definition part</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getType_definition_part <em>Type definition part</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getVariable_declaration_part <em>Variable declaration part</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getProcedure_heading <em>Procedure heading</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getProcedure_body <em>Procedure body</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getDirective <em>Directive</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getProcedure_identification <em>Procedure identification</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getFunction_heading <em>Function heading</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getFunction_body <em>Function body</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.declaration_part#getFunction_identification <em>Function identification</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part()
 * @model
 * @generated
 */
public interface declaration_part extends EObject
{
  /**
   * Returns the value of the '<em><b>Label declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Label declaration part</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Label declaration part</em>' containment reference.
   * @see #setLabel_declaration_part(label_declaration_part)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Label_declaration_part()
   * @model containment="true"
   * @generated
   */
  label_declaration_part getLabel_declaration_part();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.declaration_part#getLabel_declaration_part <em>Label declaration part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Label declaration part</em>' containment reference.
   * @see #getLabel_declaration_part()
   * @generated
   */
  void setLabel_declaration_part(label_declaration_part value);

  /**
   * Returns the value of the '<em><b>Constant definition part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Constant definition part</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constant definition part</em>' containment reference.
   * @see #setConstant_definition_part(constant_definition_part)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Constant_definition_part()
   * @model containment="true"
   * @generated
   */
  constant_definition_part getConstant_definition_part();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.declaration_part#getConstant_definition_part <em>Constant definition part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Constant definition part</em>' containment reference.
   * @see #getConstant_definition_part()
   * @generated
   */
  void setConstant_definition_part(constant_definition_part value);

  /**
   * Returns the value of the '<em><b>Type definition part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type definition part</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type definition part</em>' containment reference.
   * @see #setType_definition_part(type_definition_part)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Type_definition_part()
   * @model containment="true"
   * @generated
   */
  type_definition_part getType_definition_part();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.declaration_part#getType_definition_part <em>Type definition part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type definition part</em>' containment reference.
   * @see #getType_definition_part()
   * @generated
   */
  void setType_definition_part(type_definition_part value);

  /**
   * Returns the value of the '<em><b>Variable declaration part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable declaration part</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable declaration part</em>' containment reference.
   * @see #setVariable_declaration_part(variable_declaration_part)
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Variable_declaration_part()
   * @model containment="true"
   * @generated
   */
  variable_declaration_part getVariable_declaration_part();

  /**
   * Sets the value of the '{@link org.xtext.example.pascal.pascal.declaration_part#getVariable_declaration_part <em>Variable declaration part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable declaration part</em>' containment reference.
   * @see #getVariable_declaration_part()
   * @generated
   */
  void setVariable_declaration_part(variable_declaration_part value);

  /**
   * Returns the value of the '<em><b>Procedure heading</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.procedure_heading}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Procedure heading</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Procedure heading</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Procedure_heading()
   * @model containment="true"
   * @generated
   */
  EList<procedure_heading> getProcedure_heading();

  /**
   * Returns the value of the '<em><b>Procedure body</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.procedure_body}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Procedure body</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Procedure body</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Procedure_body()
   * @model containment="true"
   * @generated
   */
  EList<procedure_body> getProcedure_body();

  /**
   * Returns the value of the '<em><b>Directive</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.directive}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Directive</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Directive</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Directive()
   * @model containment="true"
   * @generated
   */
  EList<directive> getDirective();

  /**
   * Returns the value of the '<em><b>Procedure identification</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.procedure_identification}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Procedure identification</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Procedure identification</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Procedure_identification()
   * @model containment="true"
   * @generated
   */
  EList<procedure_identification> getProcedure_identification();

  /**
   * Returns the value of the '<em><b>Function heading</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.function_heading}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Function heading</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Function heading</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Function_heading()
   * @model containment="true"
   * @generated
   */
  EList<function_heading> getFunction_heading();

  /**
   * Returns the value of the '<em><b>Function body</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.function_body}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Function body</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Function body</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Function_body()
   * @model containment="true"
   * @generated
   */
  EList<function_body> getFunction_body();

  /**
   * Returns the value of the '<em><b>Function identification</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.pascal.pascal.function_identification}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Function identification</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Function identification</em>' containment reference list.
   * @see org.xtext.example.pascal.pascal.PascalPackage#getdeclaration_part_Function_identification()
   * @model containment="true"
   * @generated
   */
  EList<function_identification> getFunction_identification();

} // declaration_part
