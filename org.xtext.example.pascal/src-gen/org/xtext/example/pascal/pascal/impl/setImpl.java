/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.pascal.pascal.PascalPackage;
import org.xtext.example.pascal.pascal.element_list;
import org.xtext.example.pascal.pascal.set;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>set</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.setImpl#getElement_list <em>Element list</em>}</li>
 * </ul>
 *
 * @generated
 */
public class setImpl extends MinimalEObjectImpl.Container implements set
{
  /**
   * The cached value of the '{@link #getElement_list() <em>Element list</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement_list()
   * @generated
   * @ordered
   */
  protected element_list element_list;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected setImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.SET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public element_list getElement_list()
  {
    return element_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElement_list(element_list newElement_list, NotificationChain msgs)
  {
    element_list oldElement_list = element_list;
    element_list = newElement_list;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.SET__ELEMENT_LIST, oldElement_list, newElement_list);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElement_list(element_list newElement_list)
  {
    if (newElement_list != element_list)
    {
      NotificationChain msgs = null;
      if (element_list != null)
        msgs = ((InternalEObject)element_list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.SET__ELEMENT_LIST, null, msgs);
      if (newElement_list != null)
        msgs = ((InternalEObject)newElement_list).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.SET__ELEMENT_LIST, null, msgs);
      msgs = basicSetElement_list(newElement_list, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.SET__ELEMENT_LIST, newElement_list, newElement_list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.SET__ELEMENT_LIST:
        return basicSetElement_list(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.SET__ELEMENT_LIST:
        return getElement_list();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.SET__ELEMENT_LIST:
        setElement_list((element_list)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.SET__ELEMENT_LIST:
        setElement_list((element_list)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.SET__ELEMENT_LIST:
        return element_list != null;
    }
    return super.eIsSet(featureID);
  }

} //setImpl
