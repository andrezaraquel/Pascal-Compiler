/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.pascal.pascal.PascalPackage;
import org.xtext.example.pascal.pascal.array_type;
import org.xtext.example.pascal.pascal.file_type;
import org.xtext.example.pascal.pascal.record_type;
import org.xtext.example.pascal.pascal.set_type;
import org.xtext.example.pascal.pascal.unpacked_structured_type;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>unpacked structured type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl#getArray_type <em>Array type</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl#getRecord_type <em>Record type</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl#getSet_type <em>Set type</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.unpacked_structured_typeImpl#getFile_type <em>File type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class unpacked_structured_typeImpl extends MinimalEObjectImpl.Container implements unpacked_structured_type
{
  /**
   * The cached value of the '{@link #getArray_type() <em>Array type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray_type()
   * @generated
   * @ordered
   */
  protected array_type array_type;

  /**
   * The cached value of the '{@link #getRecord_type() <em>Record type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecord_type()
   * @generated
   * @ordered
   */
  protected record_type record_type;

  /**
   * The cached value of the '{@link #getSet_type() <em>Set type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSet_type()
   * @generated
   * @ordered
   */
  protected set_type set_type;

  /**
   * The cached value of the '{@link #getFile_type() <em>File type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFile_type()
   * @generated
   * @ordered
   */
  protected file_type file_type;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected unpacked_structured_typeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.UNPACKED_STRUCTURED_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public array_type getArray_type()
  {
    return array_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArray_type(array_type newArray_type, NotificationChain msgs)
  {
    array_type oldArray_type = array_type;
    array_type = newArray_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE, oldArray_type, newArray_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArray_type(array_type newArray_type)
  {
    if (newArray_type != array_type)
    {
      NotificationChain msgs = null;
      if (array_type != null)
        msgs = ((InternalEObject)array_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE, null, msgs);
      if (newArray_type != null)
        msgs = ((InternalEObject)newArray_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE, null, msgs);
      msgs = basicSetArray_type(newArray_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE, newArray_type, newArray_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public record_type getRecord_type()
  {
    return record_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRecord_type(record_type newRecord_type, NotificationChain msgs)
  {
    record_type oldRecord_type = record_type;
    record_type = newRecord_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE, oldRecord_type, newRecord_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRecord_type(record_type newRecord_type)
  {
    if (newRecord_type != record_type)
    {
      NotificationChain msgs = null;
      if (record_type != null)
        msgs = ((InternalEObject)record_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE, null, msgs);
      if (newRecord_type != null)
        msgs = ((InternalEObject)newRecord_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE, null, msgs);
      msgs = basicSetRecord_type(newRecord_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE, newRecord_type, newRecord_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public set_type getSet_type()
  {
    return set_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSet_type(set_type newSet_type, NotificationChain msgs)
  {
    set_type oldSet_type = set_type;
    set_type = newSet_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE, oldSet_type, newSet_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSet_type(set_type newSet_type)
  {
    if (newSet_type != set_type)
    {
      NotificationChain msgs = null;
      if (set_type != null)
        msgs = ((InternalEObject)set_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE, null, msgs);
      if (newSet_type != null)
        msgs = ((InternalEObject)newSet_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE, null, msgs);
      msgs = basicSetSet_type(newSet_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE, newSet_type, newSet_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public file_type getFile_type()
  {
    return file_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFile_type(file_type newFile_type, NotificationChain msgs)
  {
    file_type oldFile_type = file_type;
    file_type = newFile_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE, oldFile_type, newFile_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFile_type(file_type newFile_type)
  {
    if (newFile_type != file_type)
    {
      NotificationChain msgs = null;
      if (file_type != null)
        msgs = ((InternalEObject)file_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE, null, msgs);
      if (newFile_type != null)
        msgs = ((InternalEObject)newFile_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE, null, msgs);
      msgs = basicSetFile_type(newFile_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE, newFile_type, newFile_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE:
        return basicSetArray_type(null, msgs);
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE:
        return basicSetRecord_type(null, msgs);
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE:
        return basicSetSet_type(null, msgs);
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE:
        return basicSetFile_type(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE:
        return getArray_type();
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE:
        return getRecord_type();
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE:
        return getSet_type();
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE:
        return getFile_type();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE:
        setArray_type((array_type)newValue);
        return;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE:
        setRecord_type((record_type)newValue);
        return;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE:
        setSet_type((set_type)newValue);
        return;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE:
        setFile_type((file_type)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE:
        setArray_type((array_type)null);
        return;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE:
        setRecord_type((record_type)null);
        return;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE:
        setSet_type((set_type)null);
        return;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE:
        setFile_type((file_type)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__ARRAY_TYPE:
        return array_type != null;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__RECORD_TYPE:
        return record_type != null;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__SET_TYPE:
        return set_type != null;
      case PascalPackage.UNPACKED_STRUCTURED_TYPE__FILE_TYPE:
        return file_type != null;
    }
    return super.eIsSet(featureID);
  }

} //unpacked_structured_typeImpl
