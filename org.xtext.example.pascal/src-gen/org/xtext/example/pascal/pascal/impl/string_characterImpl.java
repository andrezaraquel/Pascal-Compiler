/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.pascal.pascal.PascalPackage;
import org.xtext.example.pascal.pascal.any_character_except_quote;
import org.xtext.example.pascal.pascal.string_character;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>string character</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.string_characterImpl#getAny_character_except_quote <em>Any character except quote</em>}</li>
 * </ul>
 *
 * @generated
 */
public class string_characterImpl extends MinimalEObjectImpl.Container implements string_character
{
  /**
   * The cached value of the '{@link #getAny_character_except_quote() <em>Any character except quote</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAny_character_except_quote()
   * @generated
   * @ordered
   */
  protected any_character_except_quote any_character_except_quote;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected string_characterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.STRING_CHARACTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public any_character_except_quote getAny_character_except_quote()
  {
    return any_character_except_quote;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAny_character_except_quote(any_character_except_quote newAny_character_except_quote, NotificationChain msgs)
  {
    any_character_except_quote oldAny_character_except_quote = any_character_except_quote;
    any_character_except_quote = newAny_character_except_quote;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE, oldAny_character_except_quote, newAny_character_except_quote);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAny_character_except_quote(any_character_except_quote newAny_character_except_quote)
  {
    if (newAny_character_except_quote != any_character_except_quote)
    {
      NotificationChain msgs = null;
      if (any_character_except_quote != null)
        msgs = ((InternalEObject)any_character_except_quote).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE, null, msgs);
      if (newAny_character_except_quote != null)
        msgs = ((InternalEObject)newAny_character_except_quote).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE, null, msgs);
      msgs = basicSetAny_character_except_quote(newAny_character_except_quote, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE, newAny_character_except_quote, newAny_character_except_quote));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE:
        return basicSetAny_character_except_quote(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE:
        return getAny_character_except_quote();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE:
        setAny_character_except_quote((any_character_except_quote)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE:
        setAny_character_except_quote((any_character_except_quote)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.STRING_CHARACTER__ANY_CHARACTER_EXCEPT_QUOTE:
        return any_character_except_quote != null;
    }
    return super.eIsSet(featureID);
  }

} //string_characterImpl
