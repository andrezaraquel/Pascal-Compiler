/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.pascal.pascal.PascalPackage;
import org.xtext.example.pascal.pascal.conformant_array_schema;
import org.xtext.example.pascal.pascal.packed_conformant_array_schema;
import org.xtext.example.pascal.pascal.unpacked_conformant_array_schema;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>conformant array schema</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.conformant_array_schemaImpl#getPacked_conformant_array_schema <em>Packed conformant array schema</em>}</li>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.conformant_array_schemaImpl#getUnpacked_conformant_array_schema <em>Unpacked conformant array schema</em>}</li>
 * </ul>
 *
 * @generated
 */
public class conformant_array_schemaImpl extends MinimalEObjectImpl.Container implements conformant_array_schema
{
  /**
   * The cached value of the '{@link #getPacked_conformant_array_schema() <em>Packed conformant array schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPacked_conformant_array_schema()
   * @generated
   * @ordered
   */
  protected packed_conformant_array_schema packed_conformant_array_schema;

  /**
   * The cached value of the '{@link #getUnpacked_conformant_array_schema() <em>Unpacked conformant array schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnpacked_conformant_array_schema()
   * @generated
   * @ordered
   */
  protected unpacked_conformant_array_schema unpacked_conformant_array_schema;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected conformant_array_schemaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.CONFORMANT_ARRAY_SCHEMA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public packed_conformant_array_schema getPacked_conformant_array_schema()
  {
    return packed_conformant_array_schema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPacked_conformant_array_schema(packed_conformant_array_schema newPacked_conformant_array_schema, NotificationChain msgs)
  {
    packed_conformant_array_schema oldPacked_conformant_array_schema = packed_conformant_array_schema;
    packed_conformant_array_schema = newPacked_conformant_array_schema;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA, oldPacked_conformant_array_schema, newPacked_conformant_array_schema);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPacked_conformant_array_schema(packed_conformant_array_schema newPacked_conformant_array_schema)
  {
    if (newPacked_conformant_array_schema != packed_conformant_array_schema)
    {
      NotificationChain msgs = null;
      if (packed_conformant_array_schema != null)
        msgs = ((InternalEObject)packed_conformant_array_schema).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA, null, msgs);
      if (newPacked_conformant_array_schema != null)
        msgs = ((InternalEObject)newPacked_conformant_array_schema).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA, null, msgs);
      msgs = basicSetPacked_conformant_array_schema(newPacked_conformant_array_schema, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA, newPacked_conformant_array_schema, newPacked_conformant_array_schema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public unpacked_conformant_array_schema getUnpacked_conformant_array_schema()
  {
    return unpacked_conformant_array_schema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnpacked_conformant_array_schema(unpacked_conformant_array_schema newUnpacked_conformant_array_schema, NotificationChain msgs)
  {
    unpacked_conformant_array_schema oldUnpacked_conformant_array_schema = unpacked_conformant_array_schema;
    unpacked_conformant_array_schema = newUnpacked_conformant_array_schema;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA, oldUnpacked_conformant_array_schema, newUnpacked_conformant_array_schema);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnpacked_conformant_array_schema(unpacked_conformant_array_schema newUnpacked_conformant_array_schema)
  {
    if (newUnpacked_conformant_array_schema != unpacked_conformant_array_schema)
    {
      NotificationChain msgs = null;
      if (unpacked_conformant_array_schema != null)
        msgs = ((InternalEObject)unpacked_conformant_array_schema).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA, null, msgs);
      if (newUnpacked_conformant_array_schema != null)
        msgs = ((InternalEObject)newUnpacked_conformant_array_schema).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA, null, msgs);
      msgs = basicSetUnpacked_conformant_array_schema(newUnpacked_conformant_array_schema, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA, newUnpacked_conformant_array_schema, newUnpacked_conformant_array_schema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA:
        return basicSetPacked_conformant_array_schema(null, msgs);
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA:
        return basicSetUnpacked_conformant_array_schema(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA:
        return getPacked_conformant_array_schema();
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA:
        return getUnpacked_conformant_array_schema();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA:
        setPacked_conformant_array_schema((packed_conformant_array_schema)newValue);
        return;
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA:
        setUnpacked_conformant_array_schema((unpacked_conformant_array_schema)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA:
        setPacked_conformant_array_schema((packed_conformant_array_schema)null);
        return;
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA:
        setUnpacked_conformant_array_schema((unpacked_conformant_array_schema)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__PACKED_CONFORMANT_ARRAY_SCHEMA:
        return packed_conformant_array_schema != null;
      case PascalPackage.CONFORMANT_ARRAY_SCHEMA__UNPACKED_CONFORMANT_ARRAY_SCHEMA:
        return unpacked_conformant_array_schema != null;
    }
    return super.eIsSet(featureID);
  }

} //conformant_array_schemaImpl
