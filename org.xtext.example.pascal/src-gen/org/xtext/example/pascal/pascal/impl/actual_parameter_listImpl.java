/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.pascal.pascal.PascalPackage;
import org.xtext.example.pascal.pascal.actual_parameter;
import org.xtext.example.pascal.pascal.actual_parameter_list;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>actual parameter list</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.actual_parameter_listImpl#getActual_parameter <em>Actual parameter</em>}</li>
 * </ul>
 *
 * @generated
 */
public class actual_parameter_listImpl extends MinimalEObjectImpl.Container implements actual_parameter_list
{
  /**
   * The cached value of the '{@link #getActual_parameter() <em>Actual parameter</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActual_parameter()
   * @generated
   * @ordered
   */
  protected EList<actual_parameter> actual_parameter;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected actual_parameter_listImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.ACTUAL_PARAMETER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<actual_parameter> getActual_parameter()
  {
    if (actual_parameter == null)
    {
      actual_parameter = new EObjectContainmentEList<actual_parameter>(actual_parameter.class, this, PascalPackage.ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER);
    }
    return actual_parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER:
        return ((InternalEList<?>)getActual_parameter()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER:
        return getActual_parameter();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER:
        getActual_parameter().clear();
        getActual_parameter().addAll((Collection<? extends actual_parameter>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER:
        getActual_parameter().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.ACTUAL_PARAMETER_LIST__ACTUAL_PARAMETER:
        return actual_parameter != null && !actual_parameter.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //actual_parameter_listImpl
