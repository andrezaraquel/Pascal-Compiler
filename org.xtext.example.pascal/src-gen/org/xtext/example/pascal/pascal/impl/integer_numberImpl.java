/**
 * generated by Xtext 2.11.0
 */
package org.xtext.example.pascal.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.pascal.pascal.PascalPackage;
import org.xtext.example.pascal.pascal.digit_sequence;
import org.xtext.example.pascal.pascal.integer_number;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>integer number</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.pascal.pascal.impl.integer_numberImpl#getDigit_sequence <em>Digit sequence</em>}</li>
 * </ul>
 *
 * @generated
 */
public class integer_numberImpl extends MinimalEObjectImpl.Container implements integer_number
{
  /**
   * The cached value of the '{@link #getDigit_sequence() <em>Digit sequence</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDigit_sequence()
   * @generated
   * @ordered
   */
  protected digit_sequence digit_sequence;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected integer_numberImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.INTEGER_NUMBER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public digit_sequence getDigit_sequence()
  {
    return digit_sequence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDigit_sequence(digit_sequence newDigit_sequence, NotificationChain msgs)
  {
    digit_sequence oldDigit_sequence = digit_sequence;
    digit_sequence = newDigit_sequence;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE, oldDigit_sequence, newDigit_sequence);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDigit_sequence(digit_sequence newDigit_sequence)
  {
    if (newDigit_sequence != digit_sequence)
    {
      NotificationChain msgs = null;
      if (digit_sequence != null)
        msgs = ((InternalEObject)digit_sequence).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE, null, msgs);
      if (newDigit_sequence != null)
        msgs = ((InternalEObject)newDigit_sequence).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE, null, msgs);
      msgs = basicSetDigit_sequence(newDigit_sequence, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE, newDigit_sequence, newDigit_sequence));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE:
        return basicSetDigit_sequence(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE:
        return getDigit_sequence();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE:
        setDigit_sequence((digit_sequence)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE:
        setDigit_sequence((digit_sequence)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.INTEGER_NUMBER__DIGIT_SEQUENCE:
        return digit_sequence != null;
    }
    return super.eIsSet(featureID);
  }

} //integer_numberImpl
